2022-06-21 05:01:37,367 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.2.Final
2022-06-21 05:01:37,377 INFO org.springframework.boot.StartupInfoLogger [main] Starting DiresaApplication using Java 1.8.0_131 on DESKTOP-9477U8E with PID 2860 (C:\Users\User\Documents\sistema familiar\back-saludfamiliar\target\classes started by User in C:\Users\User\Documents\sistema familiar\back-saludfamiliar)
2022-06-21 05:01:37,379 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2022-06-21 05:01:38,866 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-06-21 05:01:39,065 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 173 ms. Found 7 JPA repository interfaces.
2022-06-21 05:01:40,172 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2022-06-21 05:01:40,189 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2022-06-21 05:01:40,190 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2022-06-21 05:01:40,191 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.58]
2022-06-21 05:01:40,369 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2022-06-21 05:01:40,370 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 2895 ms
2022-06-21 05:01:40,621 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2022-06-21 05:01:42,082 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2022-06-21 05:01:42,178 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2022-06-21 05:01:42,285 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.6.5.Final
2022-06-21 05:01:42,650 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-06-21 05:01:42,939 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2022-06-21 05:01:44,679 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-06-21 05:01:44,701 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-06-21 05:01:46,262 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-06-21 05:01:46,648 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will not secure any request
2022-06-21 05:01:47,546 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2022-06-21 05:01:47,579 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path '/api-pedidos'
2022-06-21 05:01:47,595 INFO org.springframework.boot.StartupInfoLogger [main] Started DiresaApplication in 11.434 seconds (JVM running for 15.334)
2022-06-21 05:03:56,232 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-06-21 05:03:56,232 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2022-06-21 05:03:56,233 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 1 ms
2022-06-21 05:04:15,725 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        usuarioent0_.id_usuario as id_usuar1_11_,
        usuarioent0_.clave as clave2_11_,
        usuarioent0_.nombre as nombre3_11_,
        usuarioent0_.usuario as usuario4_11_ 
    from
        usuario usuarioent0_ 
    where
        usuarioent0_.usuario=?
2022-06-21 05:04:15,767 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        authoritie0_.usuario_id as usuario_1_12_0_,
        authoritie0_.authority_id as authorit2_12_0_,
        authoritye1_.authority_id as authorit1_0_1_,
        authoritye1_.nombre as nombre2_0_1_ 
    from
        usuario_authority authoritie0_ 
    inner join
        authority authoritye1_ 
            on authoritie0_.authority_id=authoritye1_.authority_id 
    where
        authoritie0_.usuario_id=?
2022-06-21 05:04:22,384 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_ 
    where
        empleado0_.dni=?
2022-06-21 05:04:29,983 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_ 
    where
        empleado0_.dni=?
2022-06-21 05:04:29,986 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:04:29,997 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:04:31,466 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        redsalud0_.id as id1_9_,
        redsalud0_.nombre as nombre2_9_ 
    from
        red_salud redsalud0_
2022-06-21 05:04:31,482 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        microredes0_.id_redsalud as id_redsa3_6_0_,
        microredes0_.id as id1_6_0_,
        microredes0_.id as id1_6_1_,
        microredes0_.nombre as nombre2_6_1_,
        microredes0_.id_redsalud as id_redsa3_6_1_ 
    from
        microred microredes0_ 
    where
        microredes0_.id_redsalud=?
2022-06-21 05:04:31,485 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.id as id1_4_0_,
        establecim0_.id as id1_4_1_,
        establecim0_.codigo as codigo2_4_1_,
        establecim0_.id_microred as id_micro4_4_1_,
        establecim0_.nombre as nombre3_4_1_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id_microred=?
2022-06-21 05:04:31,488 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.id as id1_4_0_,
        establecim0_.id as id1_4_1_,
        establecim0_.codigo as codigo2_4_1_,
        establecim0_.id_microred as id_micro4_4_1_,
        establecim0_.nombre as nombre3_4_1_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id_microred=?
2022-06-21 05:04:31,509 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        provincia0_.id as id1_8_,
        provincia0_.nombre as nombre2_8_,
        provincia0_.id_region as id_regio3_8_ 
    from
        provincia provincia0_
2022-06-21 05:04:31,511 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        region0_.id as id1_10_0_,
        region0_.nombre as nombre2_10_0_ 
    from
        region region0_ 
    where
        region0_.id=?
2022-06-21 05:04:31,515 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 05:04:31,517 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 05:04:31,520 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 05:04:57,898 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_ 
    from
        empleado empleado0_ 
    where
        empleado0_.id=?
2022-06-21 05:04:57,901 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_ 
    from
        distrito distrito0_ 
    where
        distrito0_.id=?
2022-06-21 05:04:57,904 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        provincia0_.id as id1_8_0_,
        provincia0_.nombre as nombre2_8_0_,
        provincia0_.id_region as id_regio3_8_0_ 
    from
        provincia provincia0_ 
    where
        provincia0_.id=?
2022-06-21 05:04:57,906 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        region0_.id as id1_10_0_,
        region0_.nombre as nombre2_10_0_ 
    from
        region region0_ 
    where
        region0_.id=?
2022-06-21 05:04:57,908 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id=?
2022-06-21 05:04:57,910 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_ 
    from
        microred microred0_ 
    where
        microred0_.id=?
2022-06-21 05:04:57,913 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        redsalud0_.id as id1_9_0_,
        redsalud0_.nombre as nombre2_9_0_ 
    from
        red_salud redsalud0_ 
    where
        redsalud0_.id=?
2022-06-21 05:04:57,919 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:04:57,946 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    update
        empleado 
    set
        id_distrito=?,
        dni=?,
        id_establecimiento=?,
        nombre=? 
    where
        id=?
2022-06-21 05:05:16,321 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_ 
    where
        empleado0_.dni=?
2022-06-21 05:05:16,324 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:05:16,327 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:05:21,448 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_ 
    where
        empleado0_.dni=?
2022-06-21 05:05:21,450 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:05:21,452 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:05:25,752 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        redsalud0_.id as id1_9_,
        redsalud0_.nombre as nombre2_9_ 
    from
        red_salud redsalud0_
2022-06-21 05:05:25,754 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        microredes0_.id_redsalud as id_redsa3_6_0_,
        microredes0_.id as id1_6_0_,
        microredes0_.id as id1_6_1_,
        microredes0_.nombre as nombre2_6_1_,
        microredes0_.id_redsalud as id_redsa3_6_1_ 
    from
        microred microredes0_ 
    where
        microredes0_.id_redsalud=?
2022-06-21 05:05:25,756 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.id as id1_4_0_,
        establecim0_.id as id1_4_1_,
        establecim0_.codigo as codigo2_4_1_,
        establecim0_.id_microred as id_micro4_4_1_,
        establecim0_.nombre as nombre3_4_1_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id_microred=?
2022-06-21 05:05:25,758 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.id as id1_4_0_,
        establecim0_.id as id1_4_1_,
        establecim0_.codigo as codigo2_4_1_,
        establecim0_.id_microred as id_micro4_4_1_,
        establecim0_.nombre as nombre3_4_1_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id_microred=?
2022-06-21 05:05:25,785 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        provincia0_.id as id1_8_,
        provincia0_.nombre as nombre2_8_,
        provincia0_.id_region as id_regio3_8_ 
    from
        provincia provincia0_
2022-06-21 05:05:25,787 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        region0_.id as id1_10_0_,
        region0_.nombre as nombre2_10_0_ 
    from
        region region0_ 
    where
        region0_.id=?
2022-06-21 05:05:25,789 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 05:05:25,792 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 05:05:25,794 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 05:05:32,575 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_ 
    from
        empleado empleado0_ 
    where
        empleado0_.id=?
2022-06-21 05:05:32,576 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_ 
    from
        distrito distrito0_ 
    where
        distrito0_.id=?
2022-06-21 05:05:32,578 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        provincia0_.id as id1_8_0_,
        provincia0_.nombre as nombre2_8_0_,
        provincia0_.id_region as id_regio3_8_0_ 
    from
        provincia provincia0_ 
    where
        provincia0_.id=?
2022-06-21 05:05:32,581 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        region0_.id as id1_10_0_,
        region0_.nombre as nombre2_10_0_ 
    from
        region region0_ 
    where
        region0_.id=?
2022-06-21 05:05:32,583 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id=?
2022-06-21 05:05:32,584 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_ 
    from
        microred microred0_ 
    where
        microred0_.id=?
2022-06-21 05:05:32,586 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        redsalud0_.id as id1_9_0_,
        redsalud0_.nombre as nombre2_9_0_ 
    from
        red_salud redsalud0_ 
    where
        redsalud0_.id=?
2022-06-21 05:05:32,588 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:05:32,590 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    update
        empleado 
    set
        id_distrito=?,
        dni=?,
        id_establecimiento=?,
        nombre=? 
    where
        id=?
2022-06-21 05:05:36,812 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_ 
    where
        empleado0_.dni=?
2022-06-21 05:05:36,814 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:05:36,816 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:05:37,895 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_ 
    where
        empleado0_.dni=?
2022-06-21 05:05:37,897 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:05:37,900 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:05:51,682 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 05:05:51,692 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 05:05:53,016 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 05:05:53,018 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:05:53,020 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:05:53,022 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:05:53,023 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:05:53,025 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:05:53,027 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:06:51,616 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 05:06:51,619 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 05:06:52,777 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 05:06:52,779 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:06:52,781 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:06:52,782 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:06:52,784 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:06:52,785 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:06:52,787 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:08:16,010 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 05:08:16,012 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:08:16,015 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:08:16,016 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:08:16,018 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:08:16,019 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:08:16,021 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:08:20,686 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 05:08:20,689 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 05:08:21,882 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 05:08:21,885 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:08:21,887 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:08:21,888 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:08:21,889 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:08:21,891 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:08:21,893 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:08:29,539 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_ 
    from
        familia familia0_ 
    where
        familia0_.id=?
2022-06-21 05:08:29,542 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_ 
    from
        empleado empleado0_ 
    where
        empleado0_.id=?
2022-06-21 05:08:29,544 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_ 
    from
        distrito distrito0_ 
    where
        distrito0_.id=?
2022-06-21 05:08:29,546 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        provincia0_.id as id1_8_0_,
        provincia0_.nombre as nombre2_8_0_,
        provincia0_.id_region as id_regio3_8_0_ 
    from
        provincia provincia0_ 
    where
        provincia0_.id=?
2022-06-21 05:08:29,548 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        region0_.id as id1_10_0_,
        region0_.nombre as nombre2_10_0_ 
    from
        region region0_ 
    where
        region0_.id=?
2022-06-21 05:08:29,550 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id=?
2022-06-21 05:08:29,552 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_ 
    from
        microred microred0_ 
    where
        microred0_.id=?
2022-06-21 05:08:29,554 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        redsalud0_.id as id1_9_0_,
        redsalud0_.nombre as nombre2_9_0_ 
    from
        red_salud redsalud0_ 
    where
        redsalud0_.id=?
2022-06-21 05:08:29,557 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 05:08:29,560 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    update
        familia 
    set
        asentamiento_humano=?,
        direccion=?,
        fecha_creacion=?,
        lote=?,
        manzana=?,
        nombre=?,
        numero_historia=?,
        referencia=?,
        sub_sector=?,
        telefono=?,
        id_titular=? 
    where
        id=?
2022-06-21 05:08:43,837 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 05:08:43,840 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 05:08:50,399 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 05:08:50,402 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:08:50,404 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:08:50,405 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:08:50,407 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:08:50,408 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:08:50,410 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:08:57,735 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 05:09:06,467 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 05:09:06,470 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 05:09:06,473 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        count(familia0_.id) as col_0_0_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?)
2022-06-21 05:09:10,887 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 05:09:10,890 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 05:09:10,894 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        count(familia0_.id) as col_0_0_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?)
2022-06-21 05:09:18,840 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 05:13:06,661 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 05:13:06,665 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:13:06,667 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:13:06,672 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:13:06,675 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:13:06,676 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:13:06,677 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:13:39,915 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 05:14:00,573 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 05:14:00,575 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 05:14:02,599 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 05:14:02,601 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:14:02,603 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:14:02,605 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:14:02,606 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:14:02,608 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:14:02,609 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:14:06,552 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_ 
    from
        familia familia0_ 
    where
        familia0_.id=?
2022-06-21 05:14:06,555 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_ 
    from
        empleado empleado0_ 
    where
        empleado0_.id=?
2022-06-21 05:14:06,557 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_ 
    from
        distrito distrito0_ 
    where
        distrito0_.id=?
2022-06-21 05:14:06,559 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        provincia0_.id as id1_8_0_,
        provincia0_.nombre as nombre2_8_0_,
        provincia0_.id_region as id_regio3_8_0_ 
    from
        provincia provincia0_ 
    where
        provincia0_.id=?
2022-06-21 05:14:06,561 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        region0_.id as id1_10_0_,
        region0_.nombre as nombre2_10_0_ 
    from
        region region0_ 
    where
        region0_.id=?
2022-06-21 05:14:06,563 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id=?
2022-06-21 05:14:06,565 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_ 
    from
        microred microred0_ 
    where
        microred0_.id=?
2022-06-21 05:14:06,566 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        redsalud0_.id as id1_9_0_,
        redsalud0_.nombre as nombre2_9_0_ 
    from
        red_salud redsalud0_ 
    where
        redsalud0_.id=?
2022-06-21 05:14:06,568 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 05:14:06,571 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    update
        familia 
    set
        asentamiento_humano=?,
        direccion=?,
        fecha_creacion=?,
        lote=?,
        manzana=?,
        nombre=?,
        numero_historia=?,
        referencia=?,
        sub_sector=?,
        telefono=?,
        id_titular=? 
    where
        id=?
2022-06-21 05:15:55,422 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 05:15:55,423 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:15:55,425 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:15:55,427 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:15:55,429 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:15:55,431 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:15:55,433 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:17:21,949 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 05:17:21,951 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:17:21,952 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:17:21,953 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:17:21,954 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:17:21,955 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:17:21,957 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:17:25,747 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 05:17:25,750 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 05:17:28,146 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 05:17:28,148 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:17:28,150 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:17:28,152 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:17:28,153 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:17:28,155 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:17:28,156 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:17:34,459 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_ 
    from
        familia familia0_ 
    where
        familia0_.id=?
2022-06-21 05:17:34,461 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_ 
    from
        empleado empleado0_ 
    where
        empleado0_.id=?
2022-06-21 05:17:34,464 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_ 
    from
        distrito distrito0_ 
    where
        distrito0_.id=?
2022-06-21 05:17:34,465 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        provincia0_.id as id1_8_0_,
        provincia0_.nombre as nombre2_8_0_,
        provincia0_.id_region as id_regio3_8_0_ 
    from
        provincia provincia0_ 
    where
        provincia0_.id=?
2022-06-21 05:17:34,467 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        region0_.id as id1_10_0_,
        region0_.nombre as nombre2_10_0_ 
    from
        region region0_ 
    where
        region0_.id=?
2022-06-21 05:17:34,469 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id=?
2022-06-21 05:17:34,470 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_ 
    from
        microred microred0_ 
    where
        microred0_.id=?
2022-06-21 05:17:34,472 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        redsalud0_.id as id1_9_0_,
        redsalud0_.nombre as nombre2_9_0_ 
    from
        red_salud redsalud0_ 
    where
        redsalud0_.id=?
2022-06-21 05:17:34,473 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 05:17:34,475 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    update
        familia 
    set
        asentamiento_humano=?,
        direccion=?,
        fecha_creacion=?,
        lote=?,
        manzana=?,
        nombre=?,
        numero_historia=?,
        referencia=?,
        sub_sector=?,
        telefono=?,
        id_titular=? 
    where
        id=?
2022-06-21 05:17:38,428 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 05:17:38,429 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:17:38,430 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:17:38,432 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:17:38,433 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:17:38,434 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:17:38,436 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:17:40,675 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 05:17:40,677 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 05:19:38,093 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 05:19:38,096 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 05:19:39,115 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 05:19:39,116 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:19:39,118 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:19:39,119 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:19:39,122 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:19:39,124 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:19:39,125 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:19:43,403 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_ 
    from
        familia familia0_ 
    where
        familia0_.id=?
2022-06-21 05:19:43,405 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_ 
    from
        empleado empleado0_ 
    where
        empleado0_.id=?
2022-06-21 05:19:43,407 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_ 
    from
        distrito distrito0_ 
    where
        distrito0_.id=?
2022-06-21 05:19:43,409 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        provincia0_.id as id1_8_0_,
        provincia0_.nombre as nombre2_8_0_,
        provincia0_.id_region as id_regio3_8_0_ 
    from
        provincia provincia0_ 
    where
        provincia0_.id=?
2022-06-21 05:19:43,411 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        region0_.id as id1_10_0_,
        region0_.nombre as nombre2_10_0_ 
    from
        region region0_ 
    where
        region0_.id=?
2022-06-21 05:19:43,413 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id=?
2022-06-21 05:19:43,415 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_ 
    from
        microred microred0_ 
    where
        microred0_.id=?
2022-06-21 05:19:43,416 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        redsalud0_.id as id1_9_0_,
        redsalud0_.nombre as nombre2_9_0_ 
    from
        red_salud redsalud0_ 
    where
        redsalud0_.id=?
2022-06-21 05:19:43,417 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 05:19:43,419 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    update
        familia 
    set
        asentamiento_humano=?,
        direccion=?,
        fecha_creacion=?,
        lote=?,
        manzana=?,
        nombre=?,
        numero_historia=?,
        referencia=?,
        sub_sector=?,
        telefono=?,
        id_titular=? 
    where
        id=?
2022-06-21 05:19:49,748 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 05:19:49,751 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 05:20:36,642 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 05:20:36,643 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 05:20:37,816 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 05:20:37,817 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:20:37,819 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:20:37,821 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:20:37,821 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:20:37,823 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:20:37,823 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:20:41,530 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_ 
    from
        familia familia0_ 
    where
        familia0_.id=?
2022-06-21 05:20:41,534 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_ 
    from
        empleado empleado0_ 
    where
        empleado0_.id=?
2022-06-21 05:21:25,901 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 05:21:25,904 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 05:21:26,843 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 05:21:26,845 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:21:26,847 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:21:26,848 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:21:26,850 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:21:26,851 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:21:26,852 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:21:33,068 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_ 
    from
        familia familia0_ 
    where
        familia0_.id=?
2022-06-21 05:21:33,070 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_ 
    from
        empleado empleado0_ 
    where
        empleado0_.id=?
2022-06-21 05:21:33,072 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 05:21:33,075 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    update
        familia 
    set
        asentamiento_humano=?,
        direccion=?,
        fecha_creacion=?,
        lote=?,
        manzana=?,
        nombre=?,
        numero_historia=?,
        referencia=?,
        sub_sector=?,
        telefono=?,
        id_titular=? 
    where
        id=?
2022-06-21 05:26:15,868 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 05:26:15,871 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 05:26:17,692 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 05:26:17,693 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:26:17,695 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:26:17,696 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:26:17,698 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:26:17,700 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:26:17,701 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:26:21,793 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_ 
    from
        familia familia0_ 
    where
        familia0_.id=?
2022-06-21 05:26:21,795 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_ 
    from
        empleado empleado0_ 
    where
        empleado0_.id=?
2022-06-21 05:26:21,797 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_ 
    from
        distrito distrito0_ 
    where
        distrito0_.id=?
2022-06-21 05:26:21,799 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        provincia0_.id as id1_8_0_,
        provincia0_.nombre as nombre2_8_0_,
        provincia0_.id_region as id_regio3_8_0_ 
    from
        provincia provincia0_ 
    where
        provincia0_.id=?
2022-06-21 05:26:21,801 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        region0_.id as id1_10_0_,
        region0_.nombre as nombre2_10_0_ 
    from
        region region0_ 
    where
        region0_.id=?
2022-06-21 05:26:21,803 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id=?
2022-06-21 05:26:21,804 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_ 
    from
        microred microred0_ 
    where
        microred0_.id=?
2022-06-21 05:26:21,805 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        redsalud0_.id as id1_9_0_,
        redsalud0_.nombre as nombre2_9_0_ 
    from
        red_salud redsalud0_ 
    where
        redsalud0_.id=?
2022-06-21 05:26:21,807 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 05:26:21,809 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    update
        familia 
    set
        asentamiento_humano=?,
        direccion=?,
        fecha_creacion=?,
        lote=?,
        manzana=?,
        nombre=?,
        numero_historia=?,
        referencia=?,
        sub_sector=?,
        telefono=?,
        id_titular=? 
    where
        id=?
2022-06-21 05:26:24,040 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 05:26:24,041 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:26:24,043 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:26:24,044 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:26:24,046 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:26:24,046 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:26:24,047 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:26:27,189 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_ 
    from
        familia familia0_ 
    where
        familia0_.id=?
2022-06-21 05:26:27,191 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_ 
    from
        empleado empleado0_ 
    where
        empleado0_.id=?
2022-06-21 05:26:27,192 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 05:26:27,195 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    update
        familia 
    set
        asentamiento_humano=?,
        direccion=?,
        fecha_creacion=?,
        lote=?,
        manzana=?,
        nombre=?,
        numero_historia=?,
        referencia=?,
        sub_sector=?,
        telefono=?,
        id_titular=? 
    where
        id=?
2022-06-21 05:27:16,798 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        empleadovo0_.id_empleados as id_emple1_13_,
        empleadovo0_.personasfam as personas2_13_,
        empleadovo0_.dniempleado as dniemple3_13_,
        empleadovo0_.nombreempleado as nombreem4_13_ 
    from
        view_empleado_listado empleadovo0_ 
    where
        upper(empleadovo0_.personasfam) like upper(?) limit ?
2022-06-21 05:27:16,814 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-8] SQL Error: 0, SQLState: 42P01
2022-06-21 05:27:16,815 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-8] ERROR: no existe la relación «view_empleado_listado»
  Position: 188
2022-06-21 05:27:20,932 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        empleadovo0_.id_empleados as id_emple1_13_,
        empleadovo0_.personasfam as personas2_13_,
        empleadovo0_.dniempleado as dniemple3_13_,
        empleadovo0_.nombreempleado as nombreem4_13_ 
    from
        view_empleado_listado empleadovo0_ 
    where
        upper(empleadovo0_.personasfam) like upper(?) limit ?
2022-06-21 05:27:20,934 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-10] SQL Error: 0, SQLState: 42P01
2022-06-21 05:27:20,935 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-10] ERROR: no existe la relación «view_empleado_listado»
  Position: 188
2022-06-21 05:28:02,040 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        empleadovo0_.id_empleados as id_emple1_13_,
        empleadovo0_.personasfam as personas2_13_,
        empleadovo0_.dniempleado as dniemple3_13_,
        empleadovo0_.nombreempleado as nombreem4_13_ 
    from
        view_empleado_listado empleadovo0_ 
    where
        upper(empleadovo0_.personasfam) like upper(?) limit ?
2022-06-21 05:28:02,042 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-1] SQL Error: 0, SQLState: 42P01
2022-06-21 05:28:02,042 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-1] ERROR: no existe la relación «view_empleado_listado»
  Position: 188
2022-06-21 05:28:23,303 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        empleadovo0_.id_empleados as id_emple1_13_,
        empleadovo0_.personasfam as personas2_13_,
        empleadovo0_.dniempleado as dniemple3_13_,
        empleadovo0_.nombreempleado as nombreem4_13_ 
    from
        view_empleado_listado empleadovo0_ 
    where
        upper(empleadovo0_.personasfam) like upper(?) limit ?
2022-06-21 05:28:23,305 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-2] SQL Error: 0, SQLState: 42P01
2022-06-21 05:28:23,306 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-2] ERROR: no existe la relación «view_empleado_listado»
  Position: 188
2022-06-21 05:30:31,057 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        empleadovo0_.id_empleados as id_emple1_13_,
        empleadovo0_.personasfam as personas2_13_,
        empleadovo0_.dniempleado as dniemple3_13_,
        empleadovo0_.nombreempleado as nombreem4_13_ 
    from
        view_empleado_listado empleadovo0_ 
    where
        upper(empleadovo0_.personasfam) like upper(?) limit ?
2022-06-21 05:30:31,058 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-3] SQL Error: 0, SQLState: 42P01
2022-06-21 05:30:31,058 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-3] ERROR: no existe la relación «view_empleado_listado»
  Position: 188
2022-06-21 05:31:28,003 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        empleadovo0_.id_empleados as id_emple1_13_,
        empleadovo0_.personasfam as personas2_13_,
        empleadovo0_.dniempleado as dniemple3_13_,
        empleadovo0_.nombreempleado as nombreem4_13_ 
    from
        view_empleado_listado empleadovo0_ 
    where
        upper(empleadovo0_.personasfam) like upper(?) limit ?
2022-06-21 05:31:28,009 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-4] SQL Error: 0, SQLState: 42P01
2022-06-21 05:31:28,009 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-4] ERROR: no existe la relación «view_empleado_listado»
  Position: 188
2022-06-21 05:32:38,610 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        empleadovo0_.id_empleados as id_emple1_13_,
        empleadovo0_.personasfam as personas2_13_,
        empleadovo0_.dniempleado as dniemple3_13_,
        empleadovo0_.nombreempleado as nombreem4_13_ 
    from
        view_empleado_listado empleadovo0_ 
    where
        upper(empleadovo0_.personasfam) like upper(?) limit ?
2022-06-21 05:32:38,616 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-6] SQL Error: 0, SQLState: 42P01
2022-06-21 05:32:38,616 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-6] ERROR: no existe la relación «view_empleado_listado»
  Position: 188
2022-06-21 05:33:01,513 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_,
        establecim0_.codigo as codigo2_4_,
        establecim0_.id_microred as id_micro4_4_,
        establecim0_.nombre as nombre3_4_ 
    from
        establecimiento establecim0_
2022-06-21 05:33:01,517 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_,
        redsalud1_.id as id1_9_1_,
        redsalud1_.nombre as nombre2_9_1_ 
    from
        microred microred0_ 
    left outer join
        red_salud redsalud1_ 
            on microred0_.id_redsalud=redsalud1_.id 
    where
        microred0_.id=?
2022-06-21 05:33:01,523 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_,
        redsalud1_.id as id1_9_1_,
        redsalud1_.nombre as nombre2_9_1_ 
    from
        microred microred0_ 
    left outer join
        red_salud redsalud1_ 
            on microred0_.id_redsalud=redsalud1_.id 
    where
        microred0_.id=?
2022-06-21 05:33:05,366 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_,
        establecim0_.codigo as codigo2_4_,
        establecim0_.id_microred as id_micro4_4_,
        establecim0_.nombre as nombre3_4_ 
    from
        establecimiento establecim0_
2022-06-21 05:33:05,367 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_,
        redsalud1_.id as id1_9_1_,
        redsalud1_.nombre as nombre2_9_1_ 
    from
        microred microred0_ 
    left outer join
        red_salud redsalud1_ 
            on microred0_.id_redsalud=redsalud1_.id 
    where
        microred0_.id=?
2022-06-21 05:33:05,369 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_,
        redsalud1_.id as id1_9_1_,
        redsalud1_.nombre as nombre2_9_1_ 
    from
        microred microred0_ 
    left outer join
        red_salud redsalud1_ 
            on microred0_.id_redsalud=redsalud1_.id 
    where
        microred0_.id=?
2022-06-21 05:33:37,797 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id as id1_4_,
        establecim0_.codigo as codigo2_4_,
        establecim0_.id_microred as id_micro4_4_,
        establecim0_.nombre as nombre3_4_ 
    from
        establecimiento establecim0_
2022-06-21 05:33:37,798 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_,
        redsalud1_.id as id1_9_1_,
        redsalud1_.nombre as nombre2_9_1_ 
    from
        microred microred0_ 
    left outer join
        red_salud redsalud1_ 
            on microred0_.id_redsalud=redsalud1_.id 
    where
        microred0_.id=?
2022-06-21 05:33:37,799 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_,
        redsalud1_.id as id1_9_1_,
        redsalud1_.nombre as nombre2_9_1_ 
    from
        microred microred0_ 
    left outer join
        red_salud redsalud1_ 
            on microred0_.id_redsalud=redsalud1_.id 
    where
        microred0_.id=?
2022-06-21 05:33:47,319 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        usuarioent0_.id_usuario as id_usuar1_11_,
        usuarioent0_.clave as clave2_11_,
        usuarioent0_.nombre as nombre3_11_,
        usuarioent0_.usuario as usuario4_11_ 
    from
        usuario usuarioent0_ 
    where
        usuarioent0_.usuario=?
2022-06-21 05:33:47,322 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        authoritie0_.usuario_id as usuario_1_12_0_,
        authoritie0_.authority_id as authorit2_12_0_,
        authoritye1_.authority_id as authorit1_0_1_,
        authoritye1_.nombre as nombre2_0_1_ 
    from
        usuario_authority authoritie0_ 
    inner join
        authority authoritye1_ 
            on authoritie0_.authority_id=authoritye1_.authority_id 
    where
        authoritie0_.usuario_id=?
2022-06-21 05:33:54,036 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        empleadovo0_.id_empleados as id_emple1_13_,
        empleadovo0_.personasfam as personas2_13_,
        empleadovo0_.dniempleado as dniemple3_13_,
        empleadovo0_.nombreempleado as nombreem4_13_ 
    from
        view_empleado_listado empleadovo0_ 
    where
        upper(empleadovo0_.personasfam) like upper(?) limit ?
2022-06-21 05:33:54,038 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-4] SQL Error: 0, SQLState: 42P01
2022-06-21 05:33:54,038 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-4] ERROR: no existe la relación «view_empleado_listado»
  Position: 188
2022-06-21 05:41:19,809 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_ 
    where
        empleado0_.dni=?
2022-06-21 05:41:19,813 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:41:19,816 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:41:22,245 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_ 
    where
        empleado0_.dni=?
2022-06-21 05:41:24,705 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        redsalud0_.id as id1_9_,
        redsalud0_.nombre as nombre2_9_ 
    from
        red_salud redsalud0_
2022-06-21 05:41:24,708 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        microredes0_.id_redsalud as id_redsa3_6_0_,
        microredes0_.id as id1_6_0_,
        microredes0_.id as id1_6_1_,
        microredes0_.nombre as nombre2_6_1_,
        microredes0_.id_redsalud as id_redsa3_6_1_ 
    from
        microred microredes0_ 
    where
        microredes0_.id_redsalud=?
2022-06-21 05:41:24,709 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.id as id1_4_0_,
        establecim0_.id as id1_4_1_,
        establecim0_.codigo as codigo2_4_1_,
        establecim0_.id_microred as id_micro4_4_1_,
        establecim0_.nombre as nombre3_4_1_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id_microred=?
2022-06-21 05:41:24,711 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.id as id1_4_0_,
        establecim0_.id as id1_4_1_,
        establecim0_.codigo as codigo2_4_1_,
        establecim0_.id_microred as id_micro4_4_1_,
        establecim0_.nombre as nombre3_4_1_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id_microred=?
2022-06-21 05:41:24,744 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        provincia0_.id as id1_8_,
        provincia0_.nombre as nombre2_8_,
        provincia0_.id_region as id_regio3_8_ 
    from
        provincia provincia0_
2022-06-21 05:41:24,745 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        region0_.id as id1_10_0_,
        region0_.nombre as nombre2_10_0_ 
    from
        region region0_ 
    where
        region0_.id=?
2022-06-21 05:41:24,747 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 05:41:24,748 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 05:41:24,749 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 05:41:46,895 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_ 
    from
        empleado empleado0_ 
    where
        empleado0_.id=?
2022-06-21 05:41:46,896 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_ 
    from
        distrito distrito0_ 
    where
        distrito0_.id=?
2022-06-21 05:41:46,898 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        provincia0_.id as id1_8_0_,
        provincia0_.nombre as nombre2_8_0_,
        provincia0_.id_region as id_regio3_8_0_ 
    from
        provincia provincia0_ 
    where
        provincia0_.id=?
2022-06-21 05:41:46,899 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        region0_.id as id1_10_0_,
        region0_.nombre as nombre2_10_0_ 
    from
        region region0_ 
    where
        region0_.id=?
2022-06-21 05:41:46,900 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id=?
2022-06-21 05:41:46,902 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_ 
    from
        microred microred0_ 
    where
        microred0_.id=?
2022-06-21 05:41:46,903 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        redsalud0_.id as id1_9_0_,
        redsalud0_.nombre as nombre2_9_0_ 
    from
        red_salud redsalud0_ 
    where
        redsalud0_.id=?
2022-06-21 05:41:46,905 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:41:46,907 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    update
        empleado 
    set
        id_distrito=?,
        dni=?,
        id_establecimiento=?,
        nombre=? 
    where
        id=?
2022-06-21 05:41:54,654 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 05:41:54,659 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 05:42:01,595 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 05:42:01,597 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:42:01,599 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:42:01,600 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:42:01,601 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:42:01,603 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:42:01,604 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:42:01,605 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:42:07,110 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_ 
    from
        familia familia0_ 
    where
        familia0_.id=?
2022-06-21 05:42:07,112 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_ 
    from
        empleado empleado0_ 
    where
        empleado0_.id=?
2022-06-21 05:42:07,114 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_ 
    from
        distrito distrito0_ 
    where
        distrito0_.id=?
2022-06-21 05:42:07,115 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        provincia0_.id as id1_8_0_,
        provincia0_.nombre as nombre2_8_0_,
        provincia0_.id_region as id_regio3_8_0_ 
    from
        provincia provincia0_ 
    where
        provincia0_.id=?
2022-06-21 05:42:07,117 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        region0_.id as id1_10_0_,
        region0_.nombre as nombre2_10_0_ 
    from
        region region0_ 
    where
        region0_.id=?
2022-06-21 05:42:07,118 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id=?
2022-06-21 05:42:07,119 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_ 
    from
        microred microred0_ 
    where
        microred0_.id=?
2022-06-21 05:42:07,119 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        redsalud0_.id as id1_9_0_,
        redsalud0_.nombre as nombre2_9_0_ 
    from
        red_salud redsalud0_ 
    where
        redsalud0_.id=?
2022-06-21 05:42:07,121 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 05:42:07,123 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    update
        familia 
    set
        asentamiento_humano=?,
        direccion=?,
        fecha_creacion=?,
        lote=?,
        manzana=?,
        nombre=?,
        numero_historia=?,
        referencia=?,
        sub_sector=?,
        telefono=?,
        id_titular=? 
    where
        id=?
2022-06-21 05:42:12,618 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 05:42:12,620 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:42:12,621 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:42:12,622 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:42:12,623 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:42:12,625 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:42:12,627 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:42:12,628 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:43:10,390 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 05:43:10,391 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:43:10,393 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:43:10,394 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:43:10,396 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:43:10,397 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:43:10,398 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:43:10,398 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:43:14,710 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 05:43:14,711 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:43:14,713 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:43:14,714 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:43:14,716 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:43:14,718 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:43:14,719 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:43:14,720 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:43:33,732 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 05:43:33,733 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 05:43:34,682 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 05:43:34,684 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:43:34,686 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:43:34,687 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:43:34,688 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:43:34,689 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:43:34,690 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:43:34,690 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:43:37,240 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 05:43:37,242 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:43:37,243 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:43:37,244 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:43:37,246 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:43:37,247 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:43:37,248 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:43:37,249 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:44:54,946 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 05:45:01,621 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 05:45:01,624 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 05:45:03,091 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 05:45:03,092 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:45:03,093 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:45:03,094 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:45:03,095 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:45:03,096 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:45:03,097 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:45:03,098 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:45:27,244 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 05:45:27,247 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 05:45:30,366 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 05:45:30,369 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 05:45:34,032 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 05:45:34,033 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:45:34,034 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:45:34,035 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:45:34,036 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:45:34,038 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:45:34,038 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:45:34,039 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:46:09,370 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 05:46:09,372 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 05:46:10,333 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 05:46:10,334 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:46:10,336 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:46:10,337 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:46:10,338 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:46:10,340 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:46:10,341 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:46:10,342 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:47:57,342 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 05:47:57,345 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 05:47:58,308 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 05:47:58,309 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:47:58,309 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:47:58,310 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:47:58,312 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:47:58,313 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:47:58,314 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:47:58,315 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:48:22,571 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 05:48:22,572 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:48:22,574 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:48:22,575 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:48:22,576 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:48:22,577 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:48:22,578 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:48:22,578 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:48:38,620 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 05:48:43,077 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 05:48:43,079 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 05:48:44,258 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 05:48:44,267 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:48:44,268 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:48:44,269 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:48:44,271 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:48:44,272 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:48:44,273 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:48:44,275 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:48:49,894 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 05:48:49,896 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:48:49,897 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:48:49,899 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:48:49,900 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:48:49,902 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:48:49,903 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:48:49,904 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:48:55,675 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_ 
    from
        familia familia0_ 
    where
        familia0_.id=?
2022-06-21 05:48:55,677 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_ 
    from
        empleado empleado0_ 
    where
        empleado0_.id=?
2022-06-21 05:48:55,679 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 05:48:55,682 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    update
        familia 
    set
        asentamiento_humano=?,
        direccion=?,
        fecha_creacion=?,
        lote=?,
        manzana=?,
        nombre=?,
        numero_historia=?,
        referencia=?,
        sub_sector=?,
        telefono=?,
        id_titular=? 
    where
        id=?
2022-06-21 05:48:57,938 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 05:48:57,939 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:48:57,940 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:48:57,942 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:48:57,942 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:48:57,942 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:48:57,943 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:48:57,944 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:52:24,111 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 05:52:24,114 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 05:52:29,038 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 05:52:54,150 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 05:53:49,310 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 05:54:17,603 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 05:54:48,444 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 05:54:48,446 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 05:54:48,447 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        count(familia0_.id) as col_0_0_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?)
2022-06-21 05:55:21,788 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 05:55:27,837 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 05:55:27,838 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 05:55:27,840 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        count(familia0_.id) as col_0_0_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?)
2022-06-21 05:55:32,833 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 05:55:41,289 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 05:55:44,035 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 05:55:44,037 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 05:55:49,729 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 05:55:49,730 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:55:49,731 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:55:49,733 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 05:55:49,735 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:55:49,735 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:55:49,736 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 05:55:49,737 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 06:15:18,344 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 06:15:18,347 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 06:15:18,352 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 06:15:18,355 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 06:15:18,356 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 06:15:18,357 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 06:15:18,358 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 06:15:18,359 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 06:15:35,883 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    insert 
    into
        familia
        (asentamiento_humano, direccion, fecha_creacion, lote, manzana, nombre, numero_historia, referencia, sub_sector, telefono, id_titular) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 06:15:49,620 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_empleado, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2022-06-21 06:15:49,636 ERROR com.example.DIRESA.controller.procesos.EncuestasController [http-nio-8080-exec-6] org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia; nested exception is java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia
org.springframework.dao.InvalidDataAccessApiUsageException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia; nested exception is java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:371)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:566)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements$$EnhancerBySpringCGLIB$$981d0a9e.add(<generated>)
	at com.example.DIRESA.controller.procesos.EncuestasController.add(EncuestasController.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.DIRESA.controller.seguridad.JWTAuthorizationFilter.doFilterInternal(JWTAuthorizationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:219)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:213)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1735)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:151)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1406)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:493)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3285)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2420)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:449)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	... 104 common frames omitted
Caused by: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia
	at org.hibernate.engine.spi.CascadingActions$8.noCascade(CascadingActions.java:379)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:169)
	at org.hibernate.event.internal.AbstractFlushingEventListener.cascadeOnFlush(AbstractFlushingEventListener.java:159)
	at org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:149)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:82)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1402)
	... 113 common frames omitted
2022-06-21 06:17:51,236 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 06:17:51,237 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 06:17:51,239 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 06:17:51,240 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 06:17:51,241 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 06:17:51,243 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 06:17:51,243 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 06:17:51,245 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 06:17:59,522 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    insert 
    into
        familia
        (asentamiento_humano, direccion, fecha_creacion, lote, manzana, nombre, numero_historia, referencia, sub_sector, telefono, id_titular) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 06:18:16,590 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_empleado, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2022-06-21 06:18:16,594 ERROR com.example.DIRESA.controller.procesos.EncuestasController [http-nio-8080-exec-9] org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia; nested exception is java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia
org.springframework.dao.InvalidDataAccessApiUsageException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia; nested exception is java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:371)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:566)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements$$EnhancerBySpringCGLIB$$981d0a9e.add(<generated>)
	at com.example.DIRESA.controller.procesos.EncuestasController.add(EncuestasController.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.DIRESA.controller.seguridad.JWTAuthorizationFilter.doFilterInternal(JWTAuthorizationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:219)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:213)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1735)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:151)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1406)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:493)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3285)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2420)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:449)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	... 104 common frames omitted
Caused by: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia
	at org.hibernate.engine.spi.CascadingActions$8.noCascade(CascadingActions.java:379)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:169)
	at org.hibernate.event.internal.AbstractFlushingEventListener.cascadeOnFlush(AbstractFlushingEventListener.java:159)
	at org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:149)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:82)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1402)
	... 113 common frames omitted
2022-06-21 06:19:50,113 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 06:19:50,114 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 06:19:50,115 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 06:19:50,116 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 06:19:50,117 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 06:19:50,118 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 06:19:50,119 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 06:19:50,120 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 06:20:01,312 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    insert 
    into
        familia
        (asentamiento_humano, direccion, fecha_creacion, lote, manzana, nombre, numero_historia, referencia, sub_sector, telefono, id_titular) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 06:21:25,892 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 06:21:25,894 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 06:21:25,895 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 06:21:25,897 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 06:21:25,898 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 06:21:25,899 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 06:21:25,899 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 06:21:25,900 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 06:21:35,915 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    insert 
    into
        familia
        (asentamiento_humano, direccion, fecha_creacion, lote, manzana, nombre, numero_historia, referencia, sub_sector, telefono, id_titular) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 06:21:41,132 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_empleado, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2022-06-21 06:21:41,141 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-5] SQL Error: 0, SQLState: 23502
2022-06-21 06:21:41,142 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-5] ERROR: el valor nulo en la columna «numero_visita» de la relación «encuesta» viola la restricción de no nulo
  Detail: La fila que falla contiene (3, null, null, null, null, null, casa cerrada, null).
2022-06-21 06:21:41,149 ERROR com.example.DIRESA.controller.procesos.EncuestasController [http-nio-8080-exec-5] could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:233)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy130.save(Unknown Source)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements.add(EncuestaImplements.java:56)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements.add(EncuestaImplements.java:22)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements$$FastClassBySpringCGLIB$$a8d3c1ad.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements$$EnhancerBySpringCGLIB$$981d0a9e.add(<generated>)
	at com.example.DIRESA.controller.procesos.EncuestasController.add(EncuestasController.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.DIRESA.controller.seguridad.JWTAuthorizationFilter.doFilterInternal(JWTAuthorizationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:219)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:213)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1735)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:109)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:200)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:58)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3279)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3885)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:760)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:746)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy118.persist(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy118.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:637)
	at sun.reflect.GeneratedMethodAccessor164.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:639)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 116 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: el valor nulo en la columna «numero_visita» de la relación «encuesta» viola la restricción de no nulo
  Detail: La fila que falla contiene (3, null, null, null, null, null, casa cerrada, null).
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:166)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:134)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	... 168 common frames omitted
2022-06-21 06:22:07,859 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_empleado, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2022-06-21 06:22:07,863 ERROR com.example.DIRESA.controller.procesos.EncuestasController [http-nio-8080-exec-6] org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia; nested exception is java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia
org.springframework.dao.InvalidDataAccessApiUsageException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia; nested exception is java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:371)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:566)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements$$EnhancerBySpringCGLIB$$981d0a9e.add(<generated>)
	at com.example.DIRESA.controller.procesos.EncuestasController.add(EncuestasController.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.DIRESA.controller.seguridad.JWTAuthorizationFilter.doFilterInternal(JWTAuthorizationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:219)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:213)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1735)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:151)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1406)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:493)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3285)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2420)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:449)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	... 104 common frames omitted
Caused by: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia
	at org.hibernate.engine.spi.CascadingActions$8.noCascade(CascadingActions.java:379)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:169)
	at org.hibernate.event.internal.AbstractFlushingEventListener.cascadeOnFlush(AbstractFlushingEventListener.java:159)
	at org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:149)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:82)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1402)
	... 113 common frames omitted
2022-06-21 06:23:05,216 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2022-06-21 06:23:05,221 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2022-06-21 06:23:05,223 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2022-06-21 06:23:11,415 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.2.Final
2022-06-21 06:23:11,418 INFO org.springframework.boot.StartupInfoLogger [main] Starting DiresaApplication using Java 1.8.0_131 on DESKTOP-9477U8E with PID 16312 (C:\Users\User\Documents\sistema familiar\back-saludfamiliar\target\classes started by User in C:\Users\User\Documents\sistema familiar\back-saludfamiliar)
2022-06-21 06:23:11,419 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2022-06-21 06:23:12,088 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-06-21 06:23:12,157 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 61 ms. Found 7 JPA repository interfaces.
2022-06-21 06:23:12,549 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2022-06-21 06:23:12,556 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2022-06-21 06:23:12,557 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2022-06-21 06:23:12,557 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.58]
2022-06-21 06:23:12,615 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2022-06-21 06:23:12,615 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1160 ms
2022-06-21 06:23:12,694 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2022-06-21 06:23:13,345 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2022-06-21 06:23:13,385 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2022-06-21 06:23:13,418 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.6.5.Final
2022-06-21 06:23:13,510 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-06-21 06:23:13,588 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2022-06-21 06:23:14,197 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-06-21 06:23:14,204 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-06-21 06:23:14,695 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-06-21 06:23:14,836 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will not secure any request
2022-06-21 06:23:15,220 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2022-06-21 06:23:15,233 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path '/api-pedidos'
2022-06-21 06:23:15,241 INFO org.springframework.boot.StartupInfoLogger [main] Started DiresaApplication in 4.212 seconds (JVM running for 5.211)
2022-06-21 06:23:30,323 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-06-21 06:23:30,324 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2022-06-21 06:23:30,325 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 1 ms
2022-06-21 06:23:30,614 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 06:23:30,656 ERROR com.example.DIRESA.controller.procesos.EncuestasController [http-nio-8080-exec-1] org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia; nested exception is java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia
org.springframework.dao.InvalidDataAccessApiUsageException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia; nested exception is java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:371)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:566)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements$$EnhancerBySpringCGLIB$$2bc15bc1.add(<generated>)
	at com.example.DIRESA.controller.procesos.EncuestasController.add(EncuestasController.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.DIRESA.controller.seguridad.JWTAuthorizationFilter.doFilterInternal(JWTAuthorizationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:219)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:213)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1735)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:151)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1406)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:493)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3285)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2420)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:449)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	... 104 common frames omitted
Caused by: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia
	at org.hibernate.engine.spi.CascadingActions$8.noCascade(CascadingActions.java:379)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:169)
	at org.hibernate.event.internal.AbstractFlushingEventListener.cascadeOnFlush(AbstractFlushingEventListener.java:159)
	at org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:149)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:82)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1402)
	... 113 common frames omitted
2022-06-21 06:27:15,485 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-3] Servlet.service() for servlet [dispatcherServlet] in context with path [/api-pedidos] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2022-06-20T14:36:13Z. Current time: 2022-06-21T06:27:15Z, a difference of 57062483 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:385)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.example.DIRESA.controller.seguridad.JWTAuthorizationFilter.getAuthentication(JWTAuthorizationFilter.java:66)
	at com.example.DIRESA.controller.seguridad.JWTAuthorizationFilter.doFilterInternal(JWTAuthorizationFilter.java:45)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:219)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:213)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1735)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-06-21 06:27:48,291 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 06:28:30,971 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 06:28:30,984 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 06:28:30,999 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 06:28:31,005 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 06:28:31,007 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 06:28:31,009 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 06:28:31,011 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 06:28:31,013 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 06:32:37,364 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 06:32:37,372 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-8] SQL Error: 0, SQLState: 23502
2022-06-21 06:32:37,373 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-8] ERROR: el valor nulo en la columna «numero_visita» de la relación «encuesta» viola la restricción de no nulo
  Detail: La fila que falla contiene (7, null, 1, null, null, null, ENCUESTADA, null).
2022-06-21 06:32:37,379 ERROR com.example.DIRESA.controller.procesos.EncuestasController [http-nio-8080-exec-8] could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:233)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy130.save(Unknown Source)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements.add(EncuestaImplements.java:56)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements.add(EncuestaImplements.java:22)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements$$FastClassBySpringCGLIB$$a8d3c1ad.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements$$EnhancerBySpringCGLIB$$2bc15bc1.add(<generated>)
	at com.example.DIRESA.controller.procesos.EncuestasController.add(EncuestasController.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.DIRESA.controller.seguridad.JWTAuthorizationFilter.doFilterInternal(JWTAuthorizationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:219)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:213)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1735)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:109)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:200)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:58)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3279)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3885)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:760)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:746)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy118.persist(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy118.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:637)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:639)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 116 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: el valor nulo en la columna «numero_visita» de la relación «encuesta» viola la restricción de no nulo
  Detail: La fila que falla contiene (7, null, 1, null, null, null, ENCUESTADA, null).
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:166)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:134)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	... 169 common frames omitted
2022-06-21 06:33:33,245 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 06:33:33,248 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-9] SQL Error: 0, SQLState: 23502
2022-06-21 06:33:33,249 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-9] ERROR: el valor nulo en la columna «fecha_visita» de la relación «encuesta» viola la restricción de no nulo
  Detail: La fila que falla contiene (8, null, 1, , , null, ENCUESTADA, ).
2022-06-21 06:33:33,252 ERROR com.example.DIRESA.controller.procesos.EncuestasController [http-nio-8080-exec-9] could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:233)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy130.save(Unknown Source)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements.add(EncuestaImplements.java:56)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements.add(EncuestaImplements.java:22)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements$$FastClassBySpringCGLIB$$a8d3c1ad.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements$$EnhancerBySpringCGLIB$$2bc15bc1.add(<generated>)
	at com.example.DIRESA.controller.procesos.EncuestasController.add(EncuestasController.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.DIRESA.controller.seguridad.JWTAuthorizationFilter.doFilterInternal(JWTAuthorizationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:219)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:213)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1735)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:109)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:200)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:58)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3279)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3885)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:760)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:746)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy118.persist(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy118.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:637)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:639)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 116 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: el valor nulo en la columna «fecha_visita» de la relación «encuesta» viola la restricción de no nulo
  Detail: La fila que falla contiene (8, null, 1, , , null, ENCUESTADA, ).
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:166)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:134)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	... 169 common frames omitted
2022-06-21 06:34:15,706 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 06:34:15,708 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-10] SQL Error: 0, SQLState: 23502
2022-06-21 06:34:15,709 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-10] ERROR: el valor nulo en la columna «fecha_visita» de la relación «encuesta» viola la restricción de no nulo
  Detail: La fila que falla contiene (9, null, 2, , , null, ENCUESTADA, ).
2022-06-21 06:34:15,710 ERROR com.example.DIRESA.controller.procesos.EncuestasController [http-nio-8080-exec-10] could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:233)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy130.save(Unknown Source)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements.add(EncuestaImplements.java:56)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements.add(EncuestaImplements.java:22)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements$$FastClassBySpringCGLIB$$a8d3c1ad.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements$$EnhancerBySpringCGLIB$$2bc15bc1.add(<generated>)
	at com.example.DIRESA.controller.procesos.EncuestasController.add(EncuestasController.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.DIRESA.controller.seguridad.JWTAuthorizationFilter.doFilterInternal(JWTAuthorizationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:219)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:213)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1735)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:109)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:200)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:58)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3279)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3885)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:760)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:746)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy118.persist(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy118.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:637)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:639)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 116 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: el valor nulo en la columna «fecha_visita» de la relación «encuesta» viola la restricción de no nulo
  Detail: La fila que falla contiene (9, null, 2, , , null, ENCUESTADA, ).
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:166)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:134)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	... 169 common frames omitted
2022-06-21 06:35:28,355 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 06:35:28,357 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-1] SQL Error: 0, SQLState: 23502
2022-06-21 06:35:28,358 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-1] ERROR: el valor nulo en la columna «fecha_visita» de la relación «encuesta» viola la restricción de no nulo
  Detail: La fila que falla contiene (10, null, 2, , , null, ENCUESTADA, ).
2022-06-21 06:35:28,360 ERROR com.example.DIRESA.controller.procesos.EncuestasController [http-nio-8080-exec-1] could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:233)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy130.save(Unknown Source)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements.add(EncuestaImplements.java:56)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements.add(EncuestaImplements.java:22)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements$$FastClassBySpringCGLIB$$a8d3c1ad.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements$$EnhancerBySpringCGLIB$$2bc15bc1.add(<generated>)
	at com.example.DIRESA.controller.procesos.EncuestasController.add(EncuestasController.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.DIRESA.controller.seguridad.JWTAuthorizationFilter.doFilterInternal(JWTAuthorizationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:219)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:213)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1735)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:109)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:200)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:58)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3279)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3885)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:760)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:746)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy118.persist(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy118.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:637)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:639)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 116 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: el valor nulo en la columna «fecha_visita» de la relación «encuesta» viola la restricción de no nulo
  Detail: La fila que falla contiene (10, null, 2, , , null, ENCUESTADA, ).
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:166)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:134)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	... 169 common frames omitted
2022-06-21 06:35:33,246 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 06:35:33,249 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-4] SQL Error: 0, SQLState: 23502
2022-06-21 06:35:33,250 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-4] ERROR: el valor nulo en la columna «fecha_visita» de la relación «encuesta» viola la restricción de no nulo
  Detail: La fila que falla contiene (11, null, 2, , , null, ENCUESTADA, ).
2022-06-21 06:35:33,253 ERROR com.example.DIRESA.controller.procesos.EncuestasController [http-nio-8080-exec-4] could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:233)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy130.save(Unknown Source)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements.add(EncuestaImplements.java:56)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements.add(EncuestaImplements.java:22)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements$$FastClassBySpringCGLIB$$a8d3c1ad.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements$$EnhancerBySpringCGLIB$$2bc15bc1.add(<generated>)
	at com.example.DIRESA.controller.procesos.EncuestasController.add(EncuestasController.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.DIRESA.controller.seguridad.JWTAuthorizationFilter.doFilterInternal(JWTAuthorizationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:219)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:213)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1735)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:109)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:200)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:58)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3279)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3885)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:760)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:746)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy118.persist(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy118.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:637)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:639)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 116 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: el valor nulo en la columna «fecha_visita» de la relación «encuesta» viola la restricción de no nulo
  Detail: La fila que falla contiene (11, null, 2, , , null, ENCUESTADA, ).
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:166)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:134)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	... 169 common frames omitted
2022-06-21 06:36:09,886 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 06:36:09,888 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-3] SQL Error: 0, SQLState: 23502
2022-06-21 06:36:09,888 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-3] ERROR: el valor nulo en la columna «fecha_visita» de la relación «encuesta» viola la restricción de no nulo
  Detail: La fila que falla contiene (12, null, 2, , , null, ENCUESTADA, ).
2022-06-21 06:36:09,890 ERROR com.example.DIRESA.controller.procesos.EncuestasController [http-nio-8080-exec-3] could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:233)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy130.save(Unknown Source)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements.add(EncuestaImplements.java:56)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements.add(EncuestaImplements.java:22)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements$$FastClassBySpringCGLIB$$a8d3c1ad.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements$$EnhancerBySpringCGLIB$$2bc15bc1.add(<generated>)
	at com.example.DIRESA.controller.procesos.EncuestasController.add(EncuestasController.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.DIRESA.controller.seguridad.JWTAuthorizationFilter.doFilterInternal(JWTAuthorizationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:219)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:213)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1735)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:109)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:200)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:58)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3279)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3885)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:760)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:746)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy118.persist(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy118.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:637)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:639)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 116 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: el valor nulo en la columna «fecha_visita» de la relación «encuesta» viola la restricción de no nulo
  Detail: La fila que falla contiene (12, null, 2, , , null, ENCUESTADA, ).
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:166)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:134)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	... 169 common frames omitted
2022-06-21 06:39:16,916 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 06:39:16,919 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-2] SQL Error: 0, SQLState: 23502
2022-06-21 06:39:16,919 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-2] ERROR: el valor nulo en la columna «fecha_visita» de la relación «encuesta» viola la restricción de no nulo
  Detail: La fila que falla contiene (13, null, 2, , , null, ENCUESTADA, ).
2022-06-21 06:39:16,922 ERROR com.example.DIRESA.controller.procesos.EncuestasController [http-nio-8080-exec-2] could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:233)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy130.save(Unknown Source)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements.add(EncuestaImplements.java:56)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements.add(EncuestaImplements.java:22)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements$$FastClassBySpringCGLIB$$a8d3c1ad.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements$$EnhancerBySpringCGLIB$$2bc15bc1.add(<generated>)
	at com.example.DIRESA.controller.procesos.EncuestasController.add(EncuestasController.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.DIRESA.controller.seguridad.JWTAuthorizationFilter.doFilterInternal(JWTAuthorizationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:219)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:213)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1735)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:109)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:200)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:58)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3279)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3885)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:760)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:746)
	at sun.reflect.GeneratedMethodAccessor79.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy118.persist(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor79.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy118.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:637)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:639)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 116 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: el valor nulo en la columna «fecha_visita» de la relación «encuesta» viola la restricción de no nulo
  Detail: La fila que falla contiene (13, null, 2, , , null, ENCUESTADA, ).
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:166)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:134)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	... 167 common frames omitted
2022-06-21 06:42:50,392 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-5] Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unrecognized field "id_familia" (class com.example.DIRESA.entity.empleado.Encuesta), not marked as ignorable; nested exception is com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "id_familia" (class com.example.DIRESA.entity.empleado.Encuesta), not marked as ignorable (7 known properties: "numeroVisita", "formaVisita", "id", "familia", "fechaVisita", "observacion", "condicionEncuesta"])<EOL> at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 16] (through reference chain: com.example.DIRESA.entity.empleado.Encuesta["id_familia"])]
2022-06-21 06:43:35,985 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 06:43:35,992 WARN com.zaxxer.hikari.pool.ProxyConnection [http-nio-8080-exec-7] HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@131a6d6b marked as broken because of SQLSTATE(0A000), ErrorCode(0)
org.postgresql.util.PSQLException: ERROR: el plan almacenado no debe cambiar el tipo de resultado
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:166)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:134)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:58)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3279)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3885)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:760)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:746)
	at sun.reflect.GeneratedMethodAccessor79.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy118.persist(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor79.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy118.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:637)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:639)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy130.save(Unknown Source)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements.add(EncuestaImplements.java:56)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements.add(EncuestaImplements.java:22)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements$$FastClassBySpringCGLIB$$a8d3c1ad.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements$$EnhancerBySpringCGLIB$$2bc15bc1.add(<generated>)
	at com.example.DIRESA.controller.procesos.EncuestasController.add(EncuestasController.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.DIRESA.controller.seguridad.JWTAuthorizationFilter.doFilterInternal(JWTAuthorizationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:219)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:213)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1735)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-06-21 06:43:35,994 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-7] SQL Error: 0, SQLState: 0A000
2022-06-21 06:43:35,994 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-7] ERROR: el plan almacenado no debe cambiar el tipo de resultado
2022-06-21 06:43:36,002 ERROR org.springframework.transaction.interceptor.TransactionAspectSupport [http-nio-8080-exec-7] Application exception overridden by rollback exception
org.springframework.orm.jpa.JpaSystemException: could not execute statement; nested exception is org.hibernate.exception.GenericJDBCException: could not execute statement
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:331)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:233)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy130.save(Unknown Source)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements.add(EncuestaImplements.java:56)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements.add(EncuestaImplements.java:22)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements$$FastClassBySpringCGLIB$$a8d3c1ad.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements$$EnhancerBySpringCGLIB$$2bc15bc1.add(<generated>)
	at com.example.DIRESA.controller.procesos.EncuestasController.add(EncuestasController.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.DIRESA.controller.seguridad.JWTAuthorizationFilter.doFilterInternal(JWTAuthorizationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:219)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:213)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1735)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.hibernate.exception.GenericJDBCException: could not execute statement
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:200)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:58)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3279)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3885)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:760)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:746)
	at sun.reflect.GeneratedMethodAccessor79.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy118.persist(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor79.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy118.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:637)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:639)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 116 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: el plan almacenado no debe cambiar el tipo de resultado
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:166)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:134)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	... 167 common frames omitted
2022-06-21 06:43:36,005 ERROR com.example.DIRESA.controller.procesos.EncuestasController [http-nio-8080-exec-7] Could not roll back JPA transaction; nested exception is org.hibernate.TransactionException: Unable to rollback against JDBC Connection
org.springframework.transaction.TransactionSystemException: Could not roll back JPA transaction; nested exception is org.hibernate.TransactionException: Unable to rollback against JDBC Connection
	at org.springframework.orm.jpa.JpaTransactionManager.doRollback(JpaTransactionManager.java:593)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:835)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.rollback(AbstractPlatformTransactionManager.java:809)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.completeTransactionAfterThrowing(TransactionAspectSupport.java:672)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements$$EnhancerBySpringCGLIB$$2bc15bc1.add(<generated>)
	at com.example.DIRESA.controller.procesos.EncuestasController.add(EncuestasController.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.DIRESA.controller.seguridad.JWTAuthorizationFilter.doFilterInternal(JWTAuthorizationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:219)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:213)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1735)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.hibernate.TransactionException: Unable to rollback against JDBC Connection
	at org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.rollback(AbstractLogicalConnectionImplementor.java:127)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.rollback(JdbcResourceLocalTransactionCoordinatorImpl.java:304)
	at org.hibernate.engine.transaction.internal.TransactionImpl.rollback(TransactionImpl.java:142)
	at org.springframework.orm.jpa.JpaTransactionManager.doRollback(JpaTransactionManager.java:589)
	... 104 common frames omitted
Caused by: java.sql.SQLException: Connection is closed
	at com.zaxxer.hikari.pool.ProxyConnection$ClosedConnection.lambda$getClosedConnection$0(ProxyConnection.java:515)
	at com.sun.proxy.$Proxy71.rollback(Unknown Source)
	at com.zaxxer.hikari.pool.ProxyConnection.rollback(ProxyConnection.java:396)
	at com.zaxxer.hikari.pool.HikariProxyConnection.rollback(HikariProxyConnection.java)
	at org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.rollback(AbstractLogicalConnectionImplementor.java:121)
	... 107 common frames omitted
2022-06-21 06:44:08,708 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2022-06-21 06:44:08,709 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2022-06-21 06:44:08,712 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2022-06-21 06:44:15,975 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.2.Final
2022-06-21 06:44:15,982 INFO org.springframework.boot.StartupInfoLogger [main] Starting DiresaApplication using Java 1.8.0_131 on DESKTOP-9477U8E with PID 14932 (C:\Users\User\Documents\sistema familiar\back-saludfamiliar\target\classes started by User in C:\Users\User\Documents\sistema familiar\back-saludfamiliar)
2022-06-21 06:44:15,983 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2022-06-21 06:44:17,071 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-06-21 06:44:17,186 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 103 ms. Found 7 JPA repository interfaces.
2022-06-21 06:44:17,743 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2022-06-21 06:44:17,751 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2022-06-21 06:44:17,752 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2022-06-21 06:44:17,753 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.58]
2022-06-21 06:44:17,829 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2022-06-21 06:44:17,829 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1774 ms
2022-06-21 06:44:17,930 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2022-06-21 06:44:18,762 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2022-06-21 06:44:18,806 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2022-06-21 06:44:18,845 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.6.5.Final
2022-06-21 06:44:18,975 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-06-21 06:44:19,093 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2022-06-21 06:44:19,923 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-06-21 06:44:19,934 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-06-21 06:44:20,586 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-06-21 06:44:20,744 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will not secure any request
2022-06-21 06:44:21,252 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2022-06-21 06:44:21,272 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path '/api-pedidos'
2022-06-21 06:44:21,283 INFO org.springframework.boot.StartupInfoLogger [main] Started DiresaApplication in 6.031 seconds (JVM running for 7.823)
2022-06-21 06:45:10,424 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-06-21 06:45:10,425 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2022-06-21 06:45:10,426 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 1 ms
2022-06-21 06:45:10,776 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 06:45:10,799 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-1] SQL Error: 0, SQLState: 23502
2022-06-21 06:45:10,800 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-1] ERROR: el valor nulo en la columna «fecha_visita» de la relación «encuesta» viola la restricción de no nulo
  Detail: La fila que falla contiene (14, null, , , null, casa cerrada, ).
2022-06-21 06:45:10,822 ERROR com.example.DIRESA.controller.procesos.EncuestasController [http-nio-8080-exec-1] could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:233)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy130.save(Unknown Source)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements.add(EncuestaImplements.java:56)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements.add(EncuestaImplements.java:22)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements$$FastClassBySpringCGLIB$$a8d3c1ad.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements$$EnhancerBySpringCGLIB$$41cb33bb.add(<generated>)
	at com.example.DIRESA.controller.procesos.EncuestasController.add(EncuestasController.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.DIRESA.controller.seguridad.JWTAuthorizationFilter.doFilterInternal(JWTAuthorizationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:219)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:213)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1735)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:109)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:200)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:58)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3279)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3885)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:760)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:746)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy118.persist(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy118.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:637)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:639)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 116 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: el valor nulo en la columna «fecha_visita» de la relación «encuesta» viola la restricción de no nulo
  Detail: La fila que falla contiene (14, null, , , null, casa cerrada, ).
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:166)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:134)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	... 169 common frames omitted
2022-06-21 06:46:24,136 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 06:46:24,140 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-2] SQL Error: 0, SQLState: 23502
2022-06-21 06:46:24,141 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-2] ERROR: el valor nulo en la columna «fecha_visita» de la relación «encuesta» viola la restricción de no nulo
  Detail: La fila que falla contiene (15, 3, , , null, casa encuestada, ).
2022-06-21 06:46:24,145 ERROR com.example.DIRESA.controller.procesos.EncuestasController [http-nio-8080-exec-2] could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:233)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy130.save(Unknown Source)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements.add(EncuestaImplements.java:56)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements.add(EncuestaImplements.java:22)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements$$FastClassBySpringCGLIB$$a8d3c1ad.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements$$EnhancerBySpringCGLIB$$41cb33bb.add(<generated>)
	at com.example.DIRESA.controller.procesos.EncuestasController.add(EncuestasController.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.DIRESA.controller.seguridad.JWTAuthorizationFilter.doFilterInternal(JWTAuthorizationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:219)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:213)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1735)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:109)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:200)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:58)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3279)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3885)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:760)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:746)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy118.persist(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy118.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:637)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:639)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 116 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: el valor nulo en la columna «fecha_visita» de la relación «encuesta» viola la restricción de no nulo
  Detail: La fila que falla contiene (15, 3, , , null, casa encuestada, ).
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:166)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:134)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	... 169 common frames omitted
2022-06-21 06:47:15,830 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 06:47:15,835 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-4] SQL Error: 0, SQLState: 23503
2022-06-21 06:47:15,836 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-4] ERROR: inserción o actualización en la tabla «encuesta» viola la llave foránea «encuesta_id_familia_fkey»
  Detail: La llave (id_familia)=(3) no está presente en la tabla «familia».
2022-06-21 06:47:15,837 ERROR com.example.DIRESA.controller.procesos.EncuestasController [http-nio-8080-exec-4] could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:233)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy130.save(Unknown Source)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements.add(EncuestaImplements.java:56)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements.add(EncuestaImplements.java:22)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements$$FastClassBySpringCGLIB$$a8d3c1ad.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements$$EnhancerBySpringCGLIB$$41cb33bb.add(<generated>)
	at com.example.DIRESA.controller.procesos.EncuestasController.add(EncuestasController.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.DIRESA.controller.seguridad.JWTAuthorizationFilter.doFilterInternal(JWTAuthorizationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:219)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:213)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1735)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:109)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:200)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:58)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3279)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3885)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:760)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:746)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy118.persist(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy118.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:637)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:639)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 116 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: inserción o actualización en la tabla «encuesta» viola la llave foránea «encuesta_id_familia_fkey»
  Detail: La llave (id_familia)=(3) no está presente en la tabla «familia».
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:166)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:134)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	... 169 common frames omitted
2022-06-21 06:48:50,854 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2022-06-21 06:48:50,856 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2022-06-21 06:48:50,860 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2022-06-21 06:48:53,932 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.2.Final
2022-06-21 06:48:53,937 INFO org.springframework.boot.StartupInfoLogger [main] Starting DiresaApplication using Java 1.8.0_131 on DESKTOP-9477U8E with PID 3696 (C:\Users\User\Documents\sistema familiar\back-saludfamiliar\target\classes started by User in C:\Users\User\Documents\sistema familiar\back-saludfamiliar)
2022-06-21 06:48:53,938 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2022-06-21 06:48:54,540 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-06-21 06:48:54,606 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 59 ms. Found 7 JPA repository interfaces.
2022-06-21 06:48:55,006 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2022-06-21 06:48:55,013 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2022-06-21 06:48:55,013 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2022-06-21 06:48:55,013 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.58]
2022-06-21 06:48:55,077 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2022-06-21 06:48:55,077 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1101 ms
2022-06-21 06:48:55,158 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2022-06-21 06:48:55,791 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2022-06-21 06:48:55,830 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2022-06-21 06:48:55,861 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.6.5.Final
2022-06-21 06:48:55,963 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-06-21 06:48:56,054 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2022-06-21 06:48:56,653 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-06-21 06:48:56,661 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-06-21 06:48:57,152 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-06-21 06:48:57,288 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will not secure any request
2022-06-21 06:48:57,680 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2022-06-21 06:48:57,694 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path '/api-pedidos'
2022-06-21 06:48:57,702 INFO org.springframework.boot.StartupInfoLogger [main] Started DiresaApplication in 4.14 seconds (JVM running for 5.086)
2022-06-21 06:49:30,373 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2022-06-21 06:49:30,374 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2022-06-21 06:49:30,377 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2022-06-21 06:49:33,902 INFO org.springframework.boot.StartupInfoLogger [main] Starting DiresaApplication using Java 1.8.0_131 on DESKTOP-9477U8E with PID 9608 (C:\Users\User\Documents\sistema familiar\back-saludfamiliar\target\classes started by User in C:\Users\User\Documents\sistema familiar\back-saludfamiliar)
2022-06-21 06:49:33,900 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.2.Final
2022-06-21 06:49:33,904 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2022-06-21 06:49:34,553 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-06-21 06:49:34,620 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 60 ms. Found 7 JPA repository interfaces.
2022-06-21 06:49:35,026 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2022-06-21 06:49:35,034 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2022-06-21 06:49:35,035 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2022-06-21 06:49:35,035 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.58]
2022-06-21 06:49:35,095 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2022-06-21 06:49:35,095 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1146 ms
2022-06-21 06:49:35,175 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2022-06-21 06:49:35,821 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2022-06-21 06:49:35,859 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2022-06-21 06:49:35,891 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.6.5.Final
2022-06-21 06:49:36,007 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-06-21 06:49:36,092 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2022-06-21 06:49:36,693 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-06-21 06:49:36,701 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-06-21 06:49:37,196 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-06-21 06:49:37,330 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will not secure any request
2022-06-21 06:49:37,692 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2022-06-21 06:49:37,706 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path '/api-pedidos'
2022-06-21 06:49:37,713 INFO org.springframework.boot.StartupInfoLogger [main] Started DiresaApplication in 4.189 seconds (JVM running for 5.12)
2022-06-21 07:01:00,380 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-06-21 07:01:00,381 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2022-06-21 07:01:00,382 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 1 ms
2022-06-21 07:01:00,612 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 07:01:12,725 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 07:01:12,733 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-4] SQL Error: 0, SQLState: 23503
2022-06-21 07:01:12,735 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-4] ERROR: inserción o actualización en la tabla «encuesta» viola la llave foránea «id_familia»
  Detail: La llave (id_familia)=(3) no está presente en la tabla «familia».
2022-06-21 07:01:12,750 ERROR com.example.DIRESA.controller.procesos.EncuestasController [http-nio-8080-exec-4] could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:233)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy130.save(Unknown Source)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements.add(EncuestaImplements.java:56)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements.add(EncuestaImplements.java:22)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements$$FastClassBySpringCGLIB$$a8d3c1ad.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements$$EnhancerBySpringCGLIB$$2bc15bc1.add(<generated>)
	at com.example.DIRESA.controller.procesos.EncuestasController.add(EncuestasController.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.DIRESA.controller.seguridad.JWTAuthorizationFilter.doFilterInternal(JWTAuthorizationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:219)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:213)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1735)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:109)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:200)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:58)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3279)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3885)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:760)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:746)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy118.persist(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy118.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:637)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:639)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 116 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: inserción o actualización en la tabla «encuesta» viola la llave foránea «id_familia»
  Detail: La llave (id_familia)=(3) no está presente en la tabla «familia».
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:166)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:134)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	... 169 common frames omitted
2022-06-21 07:01:51,949 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 07:05:38,590 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 07:05:38,600 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 07:05:38,613 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 07:05:38,618 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 07:05:38,620 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 07:05:38,622 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 07:05:38,624 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 07:05:38,626 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 07:05:48,133 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    insert 
    into
        familia
        (asentamiento_humano, direccion, fecha_creacion, lote, manzana, nombre, numero_historia, referencia, sub_sector, telefono, id_titular) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 07:05:58,011 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 07:05:58,016 ERROR com.example.DIRESA.controller.procesos.EncuestasController [http-nio-8080-exec-2] org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia; nested exception is java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia
org.springframework.dao.InvalidDataAccessApiUsageException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia; nested exception is java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:371)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:566)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements$$EnhancerBySpringCGLIB$$2bc15bc1.add(<generated>)
	at com.example.DIRESA.controller.procesos.EncuestasController.add(EncuestasController.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.DIRESA.controller.seguridad.JWTAuthorizationFilter.doFilterInternal(JWTAuthorizationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:219)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:213)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1735)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:151)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1406)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:493)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3285)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2420)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:449)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	... 104 common frames omitted
Caused by: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia
	at org.hibernate.engine.spi.CascadingActions$8.noCascade(CascadingActions.java:379)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:169)
	at org.hibernate.event.internal.AbstractFlushingEventListener.cascadeOnFlush(AbstractFlushingEventListener.java:159)
	at org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:149)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:82)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1402)
	... 113 common frames omitted
2022-06-21 07:06:56,572 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 07:06:56,574 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 07:06:56,576 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 07:06:56,577 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 07:06:56,579 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 07:06:56,581 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 07:06:56,583 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 07:06:56,585 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 07:07:05,519 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    insert 
    into
        familia
        (asentamiento_humano, direccion, fecha_creacion, lote, manzana, nombre, numero_historia, referencia, sub_sector, telefono, id_titular) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 07:07:11,618 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 07:07:11,622 ERROR com.example.DIRESA.controller.procesos.EncuestasController [http-nio-8080-exec-3] org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia; nested exception is java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia
org.springframework.dao.InvalidDataAccessApiUsageException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia; nested exception is java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:371)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:566)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements$$EnhancerBySpringCGLIB$$2bc15bc1.add(<generated>)
	at com.example.DIRESA.controller.procesos.EncuestasController.add(EncuestasController.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.DIRESA.controller.seguridad.JWTAuthorizationFilter.doFilterInternal(JWTAuthorizationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:219)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:213)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1735)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:151)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1406)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:493)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3285)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2420)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:449)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	... 104 common frames omitted
Caused by: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia
	at org.hibernate.engine.spi.CascadingActions$8.noCascade(CascadingActions.java:379)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:169)
	at org.hibernate.event.internal.AbstractFlushingEventListener.cascadeOnFlush(AbstractFlushingEventListener.java:159)
	at org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:149)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:82)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1402)
	... 113 common frames omitted
2022-06-21 07:08:25,398 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 07:08:25,400 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 07:08:25,401 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 07:08:25,403 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 07:08:25,405 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 07:08:25,407 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 07:08:25,408 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 07:08:25,409 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 07:08:32,505 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    insert 
    into
        familia
        (asentamiento_humano, direccion, fecha_creacion, lote, manzana, nombre, numero_historia, referencia, sub_sector, telefono, id_titular) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 07:08:42,694 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 07:08:42,698 ERROR com.example.DIRESA.controller.procesos.EncuestasController [http-nio-8080-exec-7] org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia; nested exception is java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia
org.springframework.dao.InvalidDataAccessApiUsageException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia; nested exception is java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:371)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:566)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.DIRESA.service.general.implemen.EncuestaImplements$$EnhancerBySpringCGLIB$$2bc15bc1.add(<generated>)
	at com.example.DIRESA.controller.procesos.EncuestasController.add(EncuestasController.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.DIRESA.controller.seguridad.JWTAuthorizationFilter.doFilterInternal(JWTAuthorizationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:219)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:213)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1735)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:151)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1406)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:493)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3285)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2420)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:449)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	... 104 common frames omitted
Caused by: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.example.DIRESA.entity.empleado.Encuesta.familia -> com.example.DIRESA.entity.general.Familia
	at org.hibernate.engine.spi.CascadingActions$8.noCascade(CascadingActions.java:379)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:169)
	at org.hibernate.event.internal.AbstractFlushingEventListener.cascadeOnFlush(AbstractFlushingEventListener.java:159)
	at org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:149)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:82)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1402)
	... 113 common frames omitted
2022-06-21 07:09:27,143 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 07:09:27,148 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 07:09:27,150 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 07:09:27,151 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 07:09:27,153 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 07:09:27,154 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 07:09:27,155 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 07:09:27,156 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 07:09:36,491 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    insert 
    into
        familia
        (asentamiento_humano, direccion, fecha_creacion, lote, manzana, nombre, numero_historia, referencia, sub_sector, telefono, id_titular) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 07:10:41,927 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 07:10:41,930 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 07:10:41,931 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 07:10:41,933 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 07:10:41,935 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 07:10:41,936 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 07:10:41,937 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 07:10:41,938 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 07:10:49,377 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    insert 
    into
        familia
        (asentamiento_humano, direccion, fecha_creacion, lote, manzana, nombre, numero_historia, referencia, sub_sector, telefono, id_titular) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 07:10:55,452 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 07:11:13,151 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2022-06-21 07:11:13,153 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2022-06-21 07:11:13,158 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2022-06-21 08:44:02,658 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.2.Final
2022-06-21 08:44:02,669 INFO org.springframework.boot.StartupInfoLogger [main] Starting DiresaApplication using Java 1.8.0_131 on DESKTOP-9477U8E with PID 20160 (C:\Users\User\Documents\sistema familiar\back-saludfamiliar\target\classes started by User in C:\Users\User\Documents\sistema familiar\back-saludfamiliar)
2022-06-21 08:44:02,670 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2022-06-21 08:44:04,750 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-06-21 08:44:04,907 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 138 ms. Found 7 JPA repository interfaces.
2022-06-21 08:44:05,838 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2022-06-21 08:44:05,852 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2022-06-21 08:44:05,854 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2022-06-21 08:44:05,855 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.58]
2022-06-21 08:44:05,996 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2022-06-21 08:44:05,996 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 3240 ms
2022-06-21 08:44:06,234 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2022-06-21 08:44:07,968 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2022-06-21 08:44:08,049 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2022-06-21 08:44:08,169 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.6.5.Final
2022-06-21 08:44:08,552 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-06-21 08:44:08,860 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2022-06-21 08:44:10,698 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-06-21 08:44:10,718 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-06-21 08:44:12,096 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-06-21 08:44:12,484 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will not secure any request
2022-06-21 08:44:13,317 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2022-06-21 08:44:13,345 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path '/api-pedidos'
2022-06-21 08:44:13,360 INFO org.springframework.boot.StartupInfoLogger [main] Started DiresaApplication in 12.153 seconds (JVM running for 18.047)
2022-06-21 08:45:44,383 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-06-21 08:45:44,384 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-2] Initializing Servlet 'dispatcherServlet'
2022-06-21 08:45:44,389 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-2] Completed initialization in 3 ms
2022-06-21 08:46:04,064 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        usuarioent0_.id_usuario as id_usuar1_11_,
        usuarioent0_.clave as clave2_11_,
        usuarioent0_.nombre as nombre3_11_,
        usuarioent0_.usuario as usuario4_11_ 
    from
        usuario usuarioent0_ 
    where
        usuarioent0_.usuario=?
2022-06-21 08:46:04,219 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        authoritie0_.usuario_id as usuario_1_12_0_,
        authoritie0_.authority_id as authorit2_12_0_,
        authoritye1_.authority_id as authorit1_0_1_,
        authoritye1_.nombre as nombre2_0_1_ 
    from
        usuario_authority authoritie0_ 
    inner join
        authority authoritye1_ 
            on authoritie0_.authority_id=authoritye1_.authority_id 
    where
        authoritie0_.usuario_id=?
2022-06-21 08:46:07,475 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 08:46:07,488 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 08:46:07,507 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 08:46:07,520 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 08:46:07,523 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 08:46:07,529 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 08:46:07,532 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 08:46:07,537 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 08:46:40,238 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    insert 
    into
        familia
        (asentamiento_humano, direccion, fecha_creacion, lote, manzana, nombre, numero_historia, referencia, sub_sector, telefono, id_titular) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 08:47:01,599 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 08:54:03,170 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 08:54:03,181 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 08:54:06,258 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 08:54:06,263 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 08:54:06,267 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 08:54:06,272 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 08:54:06,275 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 08:54:06,279 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 08:54:06,283 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 08:54:06,287 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 09:54:26,260 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-5] Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unrecognized field "nombreApellidos" (class com.example.DIRESA.entity.general.Persona), not marked as ignorable; nested exception is com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "nombreApellidos" (class com.example.DIRESA.entity.general.Persona), not marked as ignorable (15 known properties: "clasificacionRiesgo", "parentesco", "nombreCompleto", "familia", "religion", "genero", "idioma", "fechaNacimiento", "ocupacion", "estudios", "pertenenciaEtnica", "id", "seguro", "dni", "estadoCivil"])<EOL> at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 21] (through reference chain: com.example.DIRESA.entity.general.Persona["nombreApellidos"])]
2022-06-21 10:18:20,030 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-6] Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unrecognized field "nombreApellidos" (class com.example.DIRESA.entity.general.Persona), not marked as ignorable; nested exception is com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "nombreApellidos" (class com.example.DIRESA.entity.general.Persona), not marked as ignorable (15 known properties: "clasificacionRiesgo", "parentesco", "nombreCompleto", "familia", "religion", "genero", "idioma", "fechaNacimiento", "ocupacion", "estudios", "pertenenciaEtnica", "id", "seguro", "dni", "estadoCivil"])<EOL> at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 21] (through reference chain: com.example.DIRESA.entity.general.Persona["nombreApellidos"])]
2022-06-21 10:29:34,134 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-8] Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.lang.String` from Array value (token `JsonToken.START_ARRAY`); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.lang.String` from Array value (token `JsonToken.START_ARRAY`)<EOL> at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 222] (through reference chain: com.example.DIRESA.entity.general.Persona["clasificacionRiesgo"])]
2022-06-21 10:33:07,431 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-9] Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unrecognized field "gestante" (class com.example.DIRESA.entity.general.Persona), not marked as ignorable; nested exception is com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "gestante" (class com.example.DIRESA.entity.general.Persona), not marked as ignorable (15 known properties: "clasificacionRiesgo", "parentesco", "nombreCompleto", "familia", "religion", "genero", "idioma", "fechaNacimiento", "ocupacion", "estudios", "pertenenciaEtnica", "id", "seguro", "dni", "estadoCivil"])<EOL> at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 273] (through reference chain: com.example.DIRESA.entity.general.Persona["gestante"])]
2022-06-21 10:35:50,770 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    insert 
    into
        persona
        (clasificacion_riesgo, dni, estado_civil, estudios, id_familia, fecha_nacimiento, genero, idioma, nombre_completo, ocupacion, parentesco, pertenencia_etnica, religion, seguro) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 11:00:10,604 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2022-06-21 11:00:10,635 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2022-06-21 11:00:10,668 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2022-06-21 11:00:30,218 INFO org.springframework.boot.StartupInfoLogger [main] Starting DiresaApplication using Java 1.8.0_131 on DESKTOP-9477U8E with PID 18524 (C:\Users\User\Documents\sistema familiar\back-saludfamiliar\target\classes started by User in C:\Users\User\Documents\sistema familiar\back-saludfamiliar)
2022-06-21 11:00:30,218 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.2.Final
2022-06-21 11:00:30,222 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2022-06-21 11:00:31,804 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-06-21 11:00:31,977 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 143 ms. Found 7 JPA repository interfaces.
2022-06-21 11:00:33,036 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2022-06-21 11:00:33,053 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2022-06-21 11:00:33,055 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2022-06-21 11:00:33,056 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.58]
2022-06-21 11:00:33,208 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2022-06-21 11:00:33,209 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 2879 ms
2022-06-21 11:00:33,354 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2022-06-21 11:00:35,010 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2022-06-21 11:00:35,078 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2022-06-21 11:00:35,157 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.6.5.Final
2022-06-21 11:00:35,449 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-06-21 11:00:35,679 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2022-06-21 11:00:37,659 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-06-21 11:00:37,681 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-06-21 11:00:39,290 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-06-21 11:00:39,885 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will not secure any request
2022-06-21 11:00:40,933 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2022-06-21 11:00:41,020 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path '/api-pedidos'
2022-06-21 11:00:41,069 INFO org.springframework.boot.StartupInfoLogger [main] Started DiresaApplication in 11.576 seconds (JVM running for 13.781)
2022-06-21 11:10:03,364 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-06-21 11:10:03,365 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2022-06-21 11:10:03,369 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 3 ms
2022-06-21 11:10:03,808 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 11:10:14,226 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 11:10:14,264 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 11:13:38,169 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 11:13:45,764 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 11:13:45,768 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 11:15:51,761 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 11:15:51,766 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 11:16:28,747 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 11:16:28,756 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 12:02:39,039 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 12:02:39,054 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 12:03:45,366 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 12:03:45,374 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 12:13:32,296 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 12:13:32,311 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 12:13:32,322 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 12:13:32,329 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 12:13:32,337 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 12:13:32,342 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 12:13:32,346 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 12:13:32,355 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 12:13:41,360 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    insert 
    into
        familia
        (asentamiento_humano, direccion, fecha_creacion, lote, manzana, nombre, numero_historia, referencia, sub_sector, telefono, id_titular) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 12:13:45,796 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 12:16:10,764 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 12:16:10,774 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 12:16:10,783 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 12:16:10,789 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 12:16:10,796 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 12:16:10,801 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 12:16:10,807 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 12:16:10,814 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 12:16:28,461 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    insert 
    into
        familia
        (asentamiento_humano, direccion, fecha_creacion, lote, manzana, nombre, numero_historia, referencia, sub_sector, telefono, id_titular) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 12:16:32,033 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 12:17:30,525 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    insert 
    into
        persona
        (clasificacion_riesgo, dni, estado_civil, estudios, id_familia, fecha_nacimiento, genero, idioma, nombre_completo, ocupacion, parentesco, pertenencia_etnica, religion, seguro) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 12:17:57,827 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 12:17:57,831 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 12:18:40,622 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 12:18:40,625 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 12:19:32,846 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 12:19:32,849 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 12:22:43,442 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 12:22:43,447 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 12:22:55,594 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        persona0_.id as id1_7_0_,
        persona0_.clasificacion_riesgo as clasific2_7_0_,
        persona0_.dni as dni3_7_0_,
        persona0_.estado_civil as estado_c4_7_0_,
        persona0_.estudios as estudios5_7_0_,
        persona0_.id_familia as id_fami15_7_0_,
        persona0_.fecha_nacimiento as fecha_na6_7_0_,
        persona0_.genero as genero7_7_0_,
        persona0_.idioma as idioma8_7_0_,
        persona0_.nombre_completo as nombre_c9_7_0_,
        persona0_.ocupacion as ocupaci10_7_0_,
        persona0_.parentesco as parente11_7_0_,
        persona0_.pertenencia_etnica as pertene12_7_0_,
        persona0_.religion as religio13_7_0_,
        persona0_.seguro as seguro14_7_0_ 
    from
        persona persona0_ 
    where
        persona0_.id=?
2022-06-21 12:22:55,600 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_ 
    from
        familia familia0_ 
    where
        familia0_.id=?
2022-06-21 12:22:55,604 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_ 
    from
        empleado empleado0_ 
    where
        empleado0_.id=?
2022-06-21 12:22:55,608 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_ 
    from
        distrito distrito0_ 
    where
        distrito0_.id=?
2022-06-21 12:22:55,612 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        provincia0_.id as id1_8_0_,
        provincia0_.nombre as nombre2_8_0_,
        provincia0_.id_region as id_regio3_8_0_ 
    from
        provincia provincia0_ 
    where
        provincia0_.id=?
2022-06-21 12:22:55,618 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        region0_.id as id1_10_0_,
        region0_.nombre as nombre2_10_0_ 
    from
        region region0_ 
    where
        region0_.id=?
2022-06-21 12:22:55,623 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id=?
2022-06-21 12:22:55,626 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_ 
    from
        microred microred0_ 
    where
        microred0_.id=?
2022-06-21 12:22:55,631 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        redsalud0_.id as id1_9_0_,
        redsalud0_.nombre as nombre2_9_0_ 
    from
        red_salud redsalud0_ 
    where
        redsalud0_.id=?
2022-06-21 12:22:55,672 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    update
        persona 
    set
        clasificacion_riesgo=?,
        dni=?,
        estado_civil=?,
        estudios=?,
        id_familia=?,
        fecha_nacimiento=?,
        genero=?,
        idioma=?,
        nombre_completo=?,
        ocupacion=?,
        parentesco=?,
        pertenencia_etnica=?,
        religion=?,
        seguro=? 
    where
        id=?
2022-06-21 12:27:23,619 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 12:27:23,623 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 12:27:31,112 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        persona0_.id as id1_7_0_,
        persona0_.clasificacion_riesgo as clasific2_7_0_,
        persona0_.dni as dni3_7_0_,
        persona0_.estado_civil as estado_c4_7_0_,
        persona0_.estudios as estudios5_7_0_,
        persona0_.id_familia as id_fami15_7_0_,
        persona0_.fecha_nacimiento as fecha_na6_7_0_,
        persona0_.genero as genero7_7_0_,
        persona0_.idioma as idioma8_7_0_,
        persona0_.nombre_completo as nombre_c9_7_0_,
        persona0_.ocupacion as ocupaci10_7_0_,
        persona0_.parentesco as parente11_7_0_,
        persona0_.pertenencia_etnica as pertene12_7_0_,
        persona0_.religion as religio13_7_0_,
        persona0_.seguro as seguro14_7_0_ 
    from
        persona persona0_ 
    where
        persona0_.id=?
2022-06-21 12:27:31,116 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_ 
    from
        familia familia0_ 
    where
        familia0_.id=?
2022-06-21 12:27:31,120 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_ 
    from
        empleado empleado0_ 
    where
        empleado0_.id=?
2022-06-21 12:27:31,123 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_ 
    from
        distrito distrito0_ 
    where
        distrito0_.id=?
2022-06-21 12:27:31,125 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        provincia0_.id as id1_8_0_,
        provincia0_.nombre as nombre2_8_0_,
        provincia0_.id_region as id_regio3_8_0_ 
    from
        provincia provincia0_ 
    where
        provincia0_.id=?
2022-06-21 12:27:31,128 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        region0_.id as id1_10_0_,
        region0_.nombre as nombre2_10_0_ 
    from
        region region0_ 
    where
        region0_.id=?
2022-06-21 12:27:31,132 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id=?
2022-06-21 12:27:31,135 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_ 
    from
        microred microred0_ 
    where
        microred0_.id=?
2022-06-21 12:27:31,138 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        redsalud0_.id as id1_9_0_,
        redsalud0_.nombre as nombre2_9_0_ 
    from
        red_salud redsalud0_ 
    where
        redsalud0_.id=?
2022-06-21 12:27:31,143 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    update
        persona 
    set
        clasificacion_riesgo=?,
        dni=?,
        estado_civil=?,
        estudios=?,
        id_familia=?,
        fecha_nacimiento=?,
        genero=?,
        idioma=?,
        nombre_completo=?,
        ocupacion=?,
        parentesco=?,
        pertenencia_etnica=?,
        religion=?,
        seguro=? 
    where
        id=?
2022-06-21 12:29:15,798 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 12:29:15,802 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 12:29:23,740 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        persona0_.id as id1_7_0_,
        persona0_.clasificacion_riesgo as clasific2_7_0_,
        persona0_.dni as dni3_7_0_,
        persona0_.estado_civil as estado_c4_7_0_,
        persona0_.estudios as estudios5_7_0_,
        persona0_.id_familia as id_fami15_7_0_,
        persona0_.fecha_nacimiento as fecha_na6_7_0_,
        persona0_.genero as genero7_7_0_,
        persona0_.idioma as idioma8_7_0_,
        persona0_.nombre_completo as nombre_c9_7_0_,
        persona0_.ocupacion as ocupaci10_7_0_,
        persona0_.parentesco as parente11_7_0_,
        persona0_.pertenencia_etnica as pertene12_7_0_,
        persona0_.religion as religio13_7_0_,
        persona0_.seguro as seguro14_7_0_ 
    from
        persona persona0_ 
    where
        persona0_.id=?
2022-06-21 12:29:23,743 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_ 
    from
        familia familia0_ 
    where
        familia0_.id=?
2022-06-21 12:29:23,746 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_ 
    from
        empleado empleado0_ 
    where
        empleado0_.id=?
2022-06-21 12:29:23,749 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_ 
    from
        distrito distrito0_ 
    where
        distrito0_.id=?
2022-06-21 12:29:23,753 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        provincia0_.id as id1_8_0_,
        provincia0_.nombre as nombre2_8_0_,
        provincia0_.id_region as id_regio3_8_0_ 
    from
        provincia provincia0_ 
    where
        provincia0_.id=?
2022-06-21 12:29:23,757 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        region0_.id as id1_10_0_,
        region0_.nombre as nombre2_10_0_ 
    from
        region region0_ 
    where
        region0_.id=?
2022-06-21 12:29:23,760 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id=?
2022-06-21 12:29:23,763 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_ 
    from
        microred microred0_ 
    where
        microred0_.id=?
2022-06-21 12:29:23,766 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        redsalud0_.id as id1_9_0_,
        redsalud0_.nombre as nombre2_9_0_ 
    from
        red_salud redsalud0_ 
    where
        redsalud0_.id=?
2022-06-21 12:29:23,771 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    update
        persona 
    set
        clasificacion_riesgo=?,
        dni=?,
        estado_civil=?,
        estudios=?,
        id_familia=?,
        fecha_nacimiento=?,
        genero=?,
        idioma=?,
        nombre_completo=?,
        ocupacion=?,
        parentesco=?,
        pertenencia_etnica=?,
        religion=?,
        seguro=? 
    where
        id=?
2022-06-21 12:37:53,473 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 12:37:53,483 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 12:39:47,943 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 12:39:47,948 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 12:40:11,999 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        persona0_.id as id1_7_0_,
        persona0_.clasificacion_riesgo as clasific2_7_0_,
        persona0_.dni as dni3_7_0_,
        persona0_.estado_civil as estado_c4_7_0_,
        persona0_.estudios as estudios5_7_0_,
        persona0_.id_familia as id_fami15_7_0_,
        persona0_.fecha_nacimiento as fecha_na6_7_0_,
        persona0_.genero as genero7_7_0_,
        persona0_.idioma as idioma8_7_0_,
        persona0_.nombre_completo as nombre_c9_7_0_,
        persona0_.ocupacion as ocupaci10_7_0_,
        persona0_.parentesco as parente11_7_0_,
        persona0_.pertenencia_etnica as pertene12_7_0_,
        persona0_.religion as religio13_7_0_,
        persona0_.seguro as seguro14_7_0_ 
    from
        persona persona0_ 
    where
        persona0_.id=?
2022-06-21 12:40:12,003 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_ 
    from
        familia familia0_ 
    where
        familia0_.id=?
2022-06-21 12:40:12,006 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_ 
    from
        empleado empleado0_ 
    where
        empleado0_.id=?
2022-06-21 12:40:12,009 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_ 
    from
        distrito distrito0_ 
    where
        distrito0_.id=?
2022-06-21 12:40:12,012 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        provincia0_.id as id1_8_0_,
        provincia0_.nombre as nombre2_8_0_,
        provincia0_.id_region as id_regio3_8_0_ 
    from
        provincia provincia0_ 
    where
        provincia0_.id=?
2022-06-21 12:40:12,015 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        region0_.id as id1_10_0_,
        region0_.nombre as nombre2_10_0_ 
    from
        region region0_ 
    where
        region0_.id=?
2022-06-21 12:40:12,018 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id=?
2022-06-21 12:40:12,021 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_ 
    from
        microred microred0_ 
    where
        microred0_.id=?
2022-06-21 12:40:12,024 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        redsalud0_.id as id1_9_0_,
        redsalud0_.nombre as nombre2_9_0_ 
    from
        red_salud redsalud0_ 
    where
        redsalud0_.id=?
2022-06-21 12:40:12,029 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    update
        persona 
    set
        clasificacion_riesgo=?,
        dni=?,
        estado_civil=?,
        estudios=?,
        id_familia=?,
        fecha_nacimiento=?,
        genero=?,
        idioma=?,
        nombre_completo=?,
        ocupacion=?,
        parentesco=?,
        pertenencia_etnica=?,
        religion=?,
        seguro=? 
    where
        id=?
2022-06-21 12:40:26,201 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        persona0_.id as id1_7_0_,
        persona0_.clasificacion_riesgo as clasific2_7_0_,
        persona0_.dni as dni3_7_0_,
        persona0_.estado_civil as estado_c4_7_0_,
        persona0_.estudios as estudios5_7_0_,
        persona0_.id_familia as id_fami15_7_0_,
        persona0_.fecha_nacimiento as fecha_na6_7_0_,
        persona0_.genero as genero7_7_0_,
        persona0_.idioma as idioma8_7_0_,
        persona0_.nombre_completo as nombre_c9_7_0_,
        persona0_.ocupacion as ocupaci10_7_0_,
        persona0_.parentesco as parente11_7_0_,
        persona0_.pertenencia_etnica as pertene12_7_0_,
        persona0_.religion as religio13_7_0_,
        persona0_.seguro as seguro14_7_0_ 
    from
        persona persona0_ 
    where
        persona0_.id=?
2022-06-21 12:40:26,205 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_ 
    from
        familia familia0_ 
    where
        familia0_.id=?
2022-06-21 12:40:26,209 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_ 
    from
        empleado empleado0_ 
    where
        empleado0_.id=?
2022-06-21 12:40:26,212 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_ 
    from
        distrito distrito0_ 
    where
        distrito0_.id=?
2022-06-21 12:40:26,214 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        provincia0_.id as id1_8_0_,
        provincia0_.nombre as nombre2_8_0_,
        provincia0_.id_region as id_regio3_8_0_ 
    from
        provincia provincia0_ 
    where
        provincia0_.id=?
2022-06-21 12:40:26,218 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        region0_.id as id1_10_0_,
        region0_.nombre as nombre2_10_0_ 
    from
        region region0_ 
    where
        region0_.id=?
2022-06-21 12:40:26,221 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id=?
2022-06-21 12:40:26,223 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_ 
    from
        microred microred0_ 
    where
        microred0_.id=?
2022-06-21 12:40:26,226 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        redsalud0_.id as id1_9_0_,
        redsalud0_.nombre as nombre2_9_0_ 
    from
        red_salud redsalud0_ 
    where
        redsalud0_.id=?
2022-06-21 12:40:26,230 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    update
        persona 
    set
        clasificacion_riesgo=?,
        dni=?,
        estado_civil=?,
        estudios=?,
        id_familia=?,
        fecha_nacimiento=?,
        genero=?,
        idioma=?,
        nombre_completo=?,
        ocupacion=?,
        parentesco=?,
        pertenencia_etnica=?,
        religion=?,
        seguro=? 
    where
        id=?
2022-06-21 12:41:32,822 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 12:41:32,825 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 12:41:40,695 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        persona0_.id as id1_7_0_,
        persona0_.clasificacion_riesgo as clasific2_7_0_,
        persona0_.dni as dni3_7_0_,
        persona0_.estado_civil as estado_c4_7_0_,
        persona0_.estudios as estudios5_7_0_,
        persona0_.id_familia as id_fami15_7_0_,
        persona0_.fecha_nacimiento as fecha_na6_7_0_,
        persona0_.genero as genero7_7_0_,
        persona0_.idioma as idioma8_7_0_,
        persona0_.nombre_completo as nombre_c9_7_0_,
        persona0_.ocupacion as ocupaci10_7_0_,
        persona0_.parentesco as parente11_7_0_,
        persona0_.pertenencia_etnica as pertene12_7_0_,
        persona0_.religion as religio13_7_0_,
        persona0_.seguro as seguro14_7_0_ 
    from
        persona persona0_ 
    where
        persona0_.id=?
2022-06-21 12:41:40,699 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_ 
    from
        familia familia0_ 
    where
        familia0_.id=?
2022-06-21 12:41:40,703 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_ 
    from
        empleado empleado0_ 
    where
        empleado0_.id=?
2022-06-21 12:41:40,705 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_ 
    from
        distrito distrito0_ 
    where
        distrito0_.id=?
2022-06-21 12:41:40,708 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        provincia0_.id as id1_8_0_,
        provincia0_.nombre as nombre2_8_0_,
        provincia0_.id_region as id_regio3_8_0_ 
    from
        provincia provincia0_ 
    where
        provincia0_.id=?
2022-06-21 12:41:40,712 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        region0_.id as id1_10_0_,
        region0_.nombre as nombre2_10_0_ 
    from
        region region0_ 
    where
        region0_.id=?
2022-06-21 12:41:40,716 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id=?
2022-06-21 12:41:40,719 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_ 
    from
        microred microred0_ 
    where
        microred0_.id=?
2022-06-21 12:41:40,722 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        redsalud0_.id as id1_9_0_,
        redsalud0_.nombre as nombre2_9_0_ 
    from
        red_salud redsalud0_ 
    where
        redsalud0_.id=?
2022-06-21 12:41:40,725 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    update
        persona 
    set
        clasificacion_riesgo=?,
        dni=?,
        estado_civil=?,
        estudios=?,
        id_familia=?,
        fecha_nacimiento=?,
        genero=?,
        idioma=?,
        nombre_completo=?,
        ocupacion=?,
        parentesco=?,
        pertenencia_etnica=?,
        religion=?,
        seguro=? 
    where
        id=?
2022-06-21 12:41:48,323 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        persona0_.id as id1_7_0_,
        persona0_.clasificacion_riesgo as clasific2_7_0_,
        persona0_.dni as dni3_7_0_,
        persona0_.estado_civil as estado_c4_7_0_,
        persona0_.estudios as estudios5_7_0_,
        persona0_.id_familia as id_fami15_7_0_,
        persona0_.fecha_nacimiento as fecha_na6_7_0_,
        persona0_.genero as genero7_7_0_,
        persona0_.idioma as idioma8_7_0_,
        persona0_.nombre_completo as nombre_c9_7_0_,
        persona0_.ocupacion as ocupaci10_7_0_,
        persona0_.parentesco as parente11_7_0_,
        persona0_.pertenencia_etnica as pertene12_7_0_,
        persona0_.religion as religio13_7_0_,
        persona0_.seguro as seguro14_7_0_ 
    from
        persona persona0_ 
    where
        persona0_.id=?
2022-06-21 12:41:48,327 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_ 
    from
        familia familia0_ 
    where
        familia0_.id=?
2022-06-21 12:41:48,331 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_ 
    from
        empleado empleado0_ 
    where
        empleado0_.id=?
2022-06-21 12:41:48,334 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_ 
    from
        distrito distrito0_ 
    where
        distrito0_.id=?
2022-06-21 12:41:48,337 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        provincia0_.id as id1_8_0_,
        provincia0_.nombre as nombre2_8_0_,
        provincia0_.id_region as id_regio3_8_0_ 
    from
        provincia provincia0_ 
    where
        provincia0_.id=?
2022-06-21 12:41:48,339 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        region0_.id as id1_10_0_,
        region0_.nombre as nombre2_10_0_ 
    from
        region region0_ 
    where
        region0_.id=?
2022-06-21 12:41:48,341 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id=?
2022-06-21 12:41:48,344 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_ 
    from
        microred microred0_ 
    where
        microred0_.id=?
2022-06-21 12:41:48,347 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        redsalud0_.id as id1_9_0_,
        redsalud0_.nombre as nombre2_9_0_ 
    from
        red_salud redsalud0_ 
    where
        redsalud0_.id=?
2022-06-21 12:41:48,351 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    update
        persona 
    set
        clasificacion_riesgo=?,
        dni=?,
        estado_civil=?,
        estudios=?,
        id_familia=?,
        fecha_nacimiento=?,
        genero=?,
        idioma=?,
        nombre_completo=?,
        ocupacion=?,
        parentesco=?,
        pertenencia_etnica=?,
        religion=?,
        seguro=? 
    where
        id=?
2022-06-21 12:42:08,464 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        persona0_.id as id1_7_0_,
        persona0_.clasificacion_riesgo as clasific2_7_0_,
        persona0_.dni as dni3_7_0_,
        persona0_.estado_civil as estado_c4_7_0_,
        persona0_.estudios as estudios5_7_0_,
        persona0_.id_familia as id_fami15_7_0_,
        persona0_.fecha_nacimiento as fecha_na6_7_0_,
        persona0_.genero as genero7_7_0_,
        persona0_.idioma as idioma8_7_0_,
        persona0_.nombre_completo as nombre_c9_7_0_,
        persona0_.ocupacion as ocupaci10_7_0_,
        persona0_.parentesco as parente11_7_0_,
        persona0_.pertenencia_etnica as pertene12_7_0_,
        persona0_.religion as religio13_7_0_,
        persona0_.seguro as seguro14_7_0_ 
    from
        persona persona0_ 
    where
        persona0_.id=?
2022-06-21 12:42:08,468 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_ 
    from
        familia familia0_ 
    where
        familia0_.id=?
2022-06-21 12:42:08,471 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_ 
    from
        empleado empleado0_ 
    where
        empleado0_.id=?
2022-06-21 12:42:08,475 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_ 
    from
        distrito distrito0_ 
    where
        distrito0_.id=?
2022-06-21 12:42:08,479 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        provincia0_.id as id1_8_0_,
        provincia0_.nombre as nombre2_8_0_,
        provincia0_.id_region as id_regio3_8_0_ 
    from
        provincia provincia0_ 
    where
        provincia0_.id=?
2022-06-21 12:42:08,483 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        region0_.id as id1_10_0_,
        region0_.nombre as nombre2_10_0_ 
    from
        region region0_ 
    where
        region0_.id=?
2022-06-21 12:42:08,487 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id=?
2022-06-21 12:42:08,490 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_ 
    from
        microred microred0_ 
    where
        microred0_.id=?
2022-06-21 12:42:08,496 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        redsalud0_.id as id1_9_0_,
        redsalud0_.nombre as nombre2_9_0_ 
    from
        red_salud redsalud0_ 
    where
        redsalud0_.id=?
2022-06-21 12:42:08,500 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    update
        persona 
    set
        clasificacion_riesgo=?,
        dni=?,
        estado_civil=?,
        estudios=?,
        id_familia=?,
        fecha_nacimiento=?,
        genero=?,
        idioma=?,
        nombre_completo=?,
        ocupacion=?,
        parentesco=?,
        pertenencia_etnica=?,
        religion=?,
        seguro=? 
    where
        id=?
2022-06-21 12:42:23,963 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        redsalud0_.id as id1_9_,
        redsalud0_.nombre as nombre2_9_ 
    from
        red_salud redsalud0_
2022-06-21 12:42:23,986 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        microredes0_.id_redsalud as id_redsa3_6_0_,
        microredes0_.id as id1_6_0_,
        microredes0_.id as id1_6_1_,
        microredes0_.nombre as nombre2_6_1_,
        microredes0_.id_redsalud as id_redsa3_6_1_ 
    from
        microred microredes0_ 
    where
        microredes0_.id_redsalud=?
2022-06-21 12:42:23,998 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.id as id1_4_0_,
        establecim0_.id as id1_4_1_,
        establecim0_.codigo as codigo2_4_1_,
        establecim0_.id_microred as id_micro4_4_1_,
        establecim0_.nombre as nombre3_4_1_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id_microred=?
2022-06-21 12:42:24,002 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.id as id1_4_0_,
        establecim0_.id as id1_4_1_,
        establecim0_.codigo as codigo2_4_1_,
        establecim0_.id_microred as id_micro4_4_1_,
        establecim0_.nombre as nombre3_4_1_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id_microred=?
2022-06-21 12:42:24,044 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        provincia0_.id as id1_8_,
        provincia0_.nombre as nombre2_8_,
        provincia0_.id_region as id_regio3_8_ 
    from
        provincia provincia0_
2022-06-21 12:42:24,047 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        region0_.id as id1_10_0_,
        region0_.nombre as nombre2_10_0_ 
    from
        region region0_ 
    where
        region0_.id=?
2022-06-21 12:42:24,052 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 12:42:24,056 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 12:42:24,061 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 12:43:32,277 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    insert 
    into
        empleado
        (id_distrito, dni, id_establecimiento, nombre) 
    values
        (?, ?, ?, ?)
2022-06-21 12:43:32,351 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 12:43:32,354 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 12:43:32,358 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 12:43:32,361 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 12:43:32,364 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 12:43:32,366 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 12:43:32,370 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 12:43:32,373 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 12:44:22,524 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    insert 
    into
        familia
        (asentamiento_humano, direccion, fecha_creacion, lote, manzana, nombre, numero_historia, referencia, sub_sector, telefono, id_titular) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 12:44:53,524 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 12:45:09,286 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 12:45:09,289 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 12:45:09,293 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 12:45:09,294 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 12:45:09,297 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 12:45:09,301 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 12:45:09,303 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 12:45:09,306 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 12:48:34,777 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        redsalud0_.id as id1_9_,
        redsalud0_.nombre as nombre2_9_ 
    from
        red_salud redsalud0_
2022-06-21 12:48:34,781 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        microredes0_.id_redsalud as id_redsa3_6_0_,
        microredes0_.id as id1_6_0_,
        microredes0_.id as id1_6_1_,
        microredes0_.nombre as nombre2_6_1_,
        microredes0_.id_redsalud as id_redsa3_6_1_ 
    from
        microred microredes0_ 
    where
        microredes0_.id_redsalud=?
2022-06-21 12:48:34,784 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.id as id1_4_0_,
        establecim0_.id as id1_4_1_,
        establecim0_.codigo as codigo2_4_1_,
        establecim0_.id_microred as id_micro4_4_1_,
        establecim0_.nombre as nombre3_4_1_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id_microred=?
2022-06-21 12:48:34,788 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.id as id1_4_0_,
        establecim0_.id as id1_4_1_,
        establecim0_.codigo as codigo2_4_1_,
        establecim0_.id_microred as id_micro4_4_1_,
        establecim0_.nombre as nombre3_4_1_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id_microred=?
2022-06-21 12:48:34,853 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        provincia0_.id as id1_8_,
        provincia0_.nombre as nombre2_8_,
        provincia0_.id_region as id_regio3_8_ 
    from
        provincia provincia0_
2022-06-21 12:48:34,856 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        region0_.id as id1_10_0_,
        region0_.nombre as nombre2_10_0_ 
    from
        region region0_ 
    where
        region0_.id=?
2022-06-21 12:48:34,859 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 12:48:34,863 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 12:48:34,866 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 12:49:07,376 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    insert 
    into
        empleado
        (id_distrito, dni, id_establecimiento, nombre) 
    values
        (?, ?, ?, ?)
2022-06-21 12:49:07,551 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 12:49:07,556 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 12:49:07,563 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 12:49:07,568 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 12:49:07,573 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 12:49:07,577 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 12:49:07,580 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 12:49:07,584 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 12:49:28,298 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    insert 
    into
        familia
        (asentamiento_humano, direccion, fecha_creacion, lote, manzana, nombre, numero_historia, referencia, sub_sector, telefono, id_titular) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 12:50:05,435 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 12:51:01,855 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    insert 
    into
        persona
        (clasificacion_riesgo, dni, estado_civil, estudios, id_familia, fecha_nacimiento, genero, idioma, nombre_completo, ocupacion, parentesco, pertenencia_etnica, religion, seguro) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 14:04:01,399 WARN com.zaxxer.hikari.pool.HikariPool$HouseKeeper [HikariPool-1 housekeeper] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=29m2s823ms638µs200ns).
2022-06-21 14:07:30,001 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 14:07:32,546 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 14:07:32,548 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 14:07:38,441 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        persona0_.id as id1_7_0_,
        persona0_.clasificacion_riesgo as clasific2_7_0_,
        persona0_.dni as dni3_7_0_,
        persona0_.estado_civil as estado_c4_7_0_,
        persona0_.estudios as estudios5_7_0_,
        persona0_.id_familia as id_fami15_7_0_,
        persona0_.fecha_nacimiento as fecha_na6_7_0_,
        persona0_.genero as genero7_7_0_,
        persona0_.idioma as idioma8_7_0_,
        persona0_.nombre_completo as nombre_c9_7_0_,
        persona0_.ocupacion as ocupaci10_7_0_,
        persona0_.parentesco as parente11_7_0_,
        persona0_.pertenencia_etnica as pertene12_7_0_,
        persona0_.religion as religio13_7_0_,
        persona0_.seguro as seguro14_7_0_ 
    from
        persona persona0_ 
    where
        persona0_.id=?
2022-06-21 14:07:38,443 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_ 
    from
        familia familia0_ 
    where
        familia0_.id=?
2022-06-21 14:07:38,444 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_ 
    from
        empleado empleado0_ 
    where
        empleado0_.id=?
2022-06-21 14:07:38,445 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_ 
    from
        distrito distrito0_ 
    where
        distrito0_.id=?
2022-06-21 14:07:38,448 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        provincia0_.id as id1_8_0_,
        provincia0_.nombre as nombre2_8_0_,
        provincia0_.id_region as id_regio3_8_0_ 
    from
        provincia provincia0_ 
    where
        provincia0_.id=?
2022-06-21 14:07:38,449 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        region0_.id as id1_10_0_,
        region0_.nombre as nombre2_10_0_ 
    from
        region region0_ 
    where
        region0_.id=?
2022-06-21 14:07:38,450 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id=?
2022-06-21 14:07:38,452 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_ 
    from
        microred microred0_ 
    where
        microred0_.id=?
2022-06-21 14:07:38,454 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        redsalud0_.id as id1_9_0_,
        redsalud0_.nombre as nombre2_9_0_ 
    from
        red_salud redsalud0_ 
    where
        redsalud0_.id=?
2022-06-21 14:07:38,457 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    update
        persona 
    set
        clasificacion_riesgo=?,
        dni=?,
        estado_civil=?,
        estudios=?,
        id_familia=?,
        fecha_nacimiento=?,
        genero=?,
        idioma=?,
        nombre_completo=?,
        ocupacion=?,
        parentesco=?,
        pertenencia_etnica=?,
        religion=?,
        seguro=? 
    where
        id=?
2022-06-21 14:18:10,323 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_,
        establecim0_.codigo as codigo2_4_,
        establecim0_.id_microred as id_micro4_4_,
        establecim0_.nombre as nombre3_4_ 
    from
        establecimiento establecim0_
2022-06-21 14:18:10,325 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_,
        redsalud1_.id as id1_9_1_,
        redsalud1_.nombre as nombre2_9_1_ 
    from
        microred microred0_ 
    left outer join
        red_salud redsalud1_ 
            on microred0_.id_redsalud=redsalud1_.id 
    where
        microred0_.id=?
2022-06-21 14:18:10,327 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_,
        redsalud1_.id as id1_9_1_,
        redsalud1_.nombre as nombre2_9_1_ 
    from
        microred microred0_ 
    left outer join
        red_salud redsalud1_ 
            on microred0_.id_redsalud=redsalud1_.id 
    where
        microred0_.id=?
2022-06-21 14:27:03,511 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        redsalud0_.id as id1_9_,
        redsalud0_.nombre as nombre2_9_ 
    from
        red_salud redsalud0_
2022-06-21 14:27:03,515 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        microredes0_.id_redsalud as id_redsa3_6_0_,
        microredes0_.id as id1_6_0_,
        microredes0_.id as id1_6_1_,
        microredes0_.nombre as nombre2_6_1_,
        microredes0_.id_redsalud as id_redsa3_6_1_ 
    from
        microred microredes0_ 
    where
        microredes0_.id_redsalud=?
2022-06-21 14:27:03,518 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.id as id1_4_0_,
        establecim0_.id as id1_4_1_,
        establecim0_.codigo as codigo2_4_1_,
        establecim0_.id_microred as id_micro4_4_1_,
        establecim0_.nombre as nombre3_4_1_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id_microred=?
2022-06-21 14:27:03,519 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.id as id1_4_0_,
        establecim0_.id as id1_4_1_,
        establecim0_.codigo as codigo2_4_1_,
        establecim0_.id_microred as id_micro4_4_1_,
        establecim0_.nombre as nombre3_4_1_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id_microred=?
2022-06-21 14:27:03,555 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        provincia0_.id as id1_8_,
        provincia0_.nombre as nombre2_8_,
        provincia0_.id_region as id_regio3_8_ 
    from
        provincia provincia0_
2022-06-21 14:27:03,557 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        region0_.id as id1_10_0_,
        region0_.nombre as nombre2_10_0_ 
    from
        region region0_ 
    where
        region0_.id=?
2022-06-21 14:27:03,559 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 14:27:03,561 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 14:27:03,563 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 14:33:32,855 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 14:33:32,857 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 14:34:11,499 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 14:34:11,507 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 14:40:17,639 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 14:40:17,642 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 14:40:42,488 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 14:40:42,490 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 14:41:29,895 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 14:41:29,897 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 14:41:43,938 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 14:41:43,941 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 14:57:08,052 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 14:57:08,056 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 14:58:03,552 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 14:58:03,554 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 14:58:45,081 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 14:58:45,084 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 15:05:10,509 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 15:05:10,512 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 15:05:10,516 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:05:10,521 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 15:05:10,522 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:05:10,524 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:05:10,525 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:05:10,526 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:05:53,384 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    insert 
    into
        familia
        (asentamiento_humano, direccion, fecha_creacion, lote, manzana, nombre, numero_historia, referencia, sub_sector, telefono, id_titular) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 15:05:57,805 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 15:08:08,676 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 15:08:08,683 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 15:08:08,685 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:08:08,687 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 15:08:08,688 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:08:08,690 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:08:08,691 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:08:08,692 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:08:17,825 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    insert 
    into
        familia
        (asentamiento_humano, direccion, fecha_creacion, lote, manzana, nombre, numero_historia, referencia, sub_sector, telefono, id_titular) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 15:08:19,780 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 15:10:31,348 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 15:10:31,350 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 15:10:31,351 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:10:31,352 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 15:10:31,353 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:10:31,354 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:10:31,355 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:10:31,356 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:10:37,311 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    insert 
    into
        familia
        (asentamiento_humano, direccion, fecha_creacion, lote, manzana, nombre, numero_historia, referencia, sub_sector, telefono, id_titular) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 15:10:41,167 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 15:13:12,139 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 15:13:12,140 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 15:13:12,144 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:13:12,145 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 15:13:12,146 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:13:12,147 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:13:12,149 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:13:12,149 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:13:20,010 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    insert 
    into
        familia
        (asentamiento_humano, direccion, fecha_creacion, lote, manzana, nombre, numero_historia, referencia, sub_sector, telefono, id_titular) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 15:13:24,583 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 15:14:18,480 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 15:14:18,482 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 15:14:18,484 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:14:18,486 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 15:14:18,487 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:14:18,488 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:14:18,489 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:14:18,490 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:14:26,142 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    insert 
    into
        familia
        (asentamiento_humano, direccion, fecha_creacion, lote, manzana, nombre, numero_historia, referencia, sub_sector, telefono, id_titular) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 15:14:28,389 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 15:15:11,144 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 15:15:11,146 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 15:15:11,147 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:15:11,148 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 15:15:11,149 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:15:11,152 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:15:11,153 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:15:11,154 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:15:18,891 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    insert 
    into
        familia
        (asentamiento_humano, direccion, fecha_creacion, lote, manzana, nombre, numero_historia, referencia, sub_sector, telefono, id_titular) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 15:15:20,661 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 15:15:34,404 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    insert 
    into
        persona
        (clasificacion_riesgo, dni, estado_civil, estudios, id_familia, fecha_nacimiento, genero, idioma, nombre_completo, ocupacion, parentesco, pertenencia_etnica, religion, seguro) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 15:16:05,841 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 15:16:13,391 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 15:16:13,395 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 15:16:21,785 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        persona0_.id as id1_7_0_,
        persona0_.clasificacion_riesgo as clasific2_7_0_,
        persona0_.dni as dni3_7_0_,
        persona0_.estado_civil as estado_c4_7_0_,
        persona0_.estudios as estudios5_7_0_,
        persona0_.id_familia as id_fami15_7_0_,
        persona0_.fecha_nacimiento as fecha_na6_7_0_,
        persona0_.genero as genero7_7_0_,
        persona0_.idioma as idioma8_7_0_,
        persona0_.nombre_completo as nombre_c9_7_0_,
        persona0_.ocupacion as ocupaci10_7_0_,
        persona0_.parentesco as parente11_7_0_,
        persona0_.pertenencia_etnica as pertene12_7_0_,
        persona0_.religion as religio13_7_0_,
        persona0_.seguro as seguro14_7_0_ 
    from
        persona persona0_ 
    where
        persona0_.id=?
2022-06-21 15:16:21,788 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_ 
    from
        familia familia0_ 
    where
        familia0_.id=?
2022-06-21 15:16:21,790 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_ 
    from
        empleado empleado0_ 
    where
        empleado0_.id=?
2022-06-21 15:16:21,793 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_ 
    from
        distrito distrito0_ 
    where
        distrito0_.id=?
2022-06-21 15:16:21,794 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        provincia0_.id as id1_8_0_,
        provincia0_.nombre as nombre2_8_0_,
        provincia0_.id_region as id_regio3_8_0_ 
    from
        provincia provincia0_ 
    where
        provincia0_.id=?
2022-06-21 15:16:21,795 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        region0_.id as id1_10_0_,
        region0_.nombre as nombre2_10_0_ 
    from
        region region0_ 
    where
        region0_.id=?
2022-06-21 15:16:21,797 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id=?
2022-06-21 15:16:21,798 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_ 
    from
        microred microred0_ 
    where
        microred0_.id=?
2022-06-21 15:16:21,799 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        redsalud0_.id as id1_9_0_,
        redsalud0_.nombre as nombre2_9_0_ 
    from
        red_salud redsalud0_ 
    where
        redsalud0_.id=?
2022-06-21 15:16:56,516 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 15:16:56,517 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 15:16:56,518 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:16:56,519 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 15:16:56,520 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:16:56,521 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:16:56,522 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:16:56,523 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:17:03,200 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 15:17:03,202 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 15:17:03,203 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:17:03,204 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 15:17:03,205 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:17:03,206 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:17:03,207 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:17:03,208 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:17:10,602 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    insert 
    into
        familia
        (asentamiento_humano, direccion, fecha_creacion, lote, manzana, nombre, numero_historia, referencia, sub_sector, telefono, id_titular) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 15:17:12,644 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 15:17:35,854 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    insert 
    into
        persona
        (clasificacion_riesgo, dni, estado_civil, estudios, id_familia, fecha_nacimiento, genero, idioma, nombre_completo, ocupacion, parentesco, pertenencia_etnica, religion, seguro) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 15:18:55,536 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 15:18:55,538 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 15:18:55,539 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:18:55,541 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 15:18:55,542 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:18:55,543 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:18:55,545 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:18:55,547 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:19:01,821 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    insert 
    into
        familia
        (asentamiento_humano, direccion, fecha_creacion, lote, manzana, nombre, numero_historia, referencia, sub_sector, telefono, id_titular) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 15:19:03,177 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 15:19:14,286 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    insert 
    into
        persona
        (clasificacion_riesgo, dni, estado_civil, estudios, id_familia, fecha_nacimiento, genero, idioma, nombre_completo, ocupacion, parentesco, pertenencia_etnica, religion, seguro) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 15:21:51,259 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 15:21:51,260 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 15:21:51,261 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:21:51,262 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 15:21:51,263 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:21:51,264 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:21:51,265 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:21:51,265 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:22:10,035 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    insert 
    into
        familia
        (asentamiento_humano, direccion, fecha_creacion, lote, manzana, nombre, numero_historia, referencia, sub_sector, telefono, id_titular) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 15:22:14,482 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 15:22:26,089 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    insert 
    into
        persona
        (clasificacion_riesgo, dni, estado_civil, estudios, id_familia, fecha_nacimiento, genero, idioma, nombre_completo, ocupacion, parentesco, pertenencia_etnica, religion, seguro) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 15:24:19,053 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 15:24:19,055 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 15:24:19,056 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:24:19,056 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 15:24:19,057 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:24:19,058 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:24:19,060 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:24:19,060 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:24:25,338 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    insert 
    into
        familia
        (asentamiento_humano, direccion, fecha_creacion, lote, manzana, nombre, numero_historia, referencia, sub_sector, telefono, id_titular) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 15:24:26,432 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 15:24:36,633 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    insert 
    into
        persona
        (clasificacion_riesgo, dni, estado_civil, estudios, id_familia, fecha_nacimiento, genero, idioma, nombre_completo, ocupacion, parentesco, pertenencia_etnica, religion, seguro) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 15:25:21,655 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 15:25:21,659 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 15:25:25,747 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        persona0_.id as id1_7_0_,
        persona0_.clasificacion_riesgo as clasific2_7_0_,
        persona0_.dni as dni3_7_0_,
        persona0_.estado_civil as estado_c4_7_0_,
        persona0_.estudios as estudios5_7_0_,
        persona0_.id_familia as id_fami15_7_0_,
        persona0_.fecha_nacimiento as fecha_na6_7_0_,
        persona0_.genero as genero7_7_0_,
        persona0_.idioma as idioma8_7_0_,
        persona0_.nombre_completo as nombre_c9_7_0_,
        persona0_.ocupacion as ocupaci10_7_0_,
        persona0_.parentesco as parente11_7_0_,
        persona0_.pertenencia_etnica as pertene12_7_0_,
        persona0_.religion as religio13_7_0_,
        persona0_.seguro as seguro14_7_0_ 
    from
        persona persona0_ 
    where
        persona0_.id=?
2022-06-21 15:25:25,750 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_ 
    from
        familia familia0_ 
    where
        familia0_.id=?
2022-06-21 15:25:25,752 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_ 
    from
        empleado empleado0_ 
    where
        empleado0_.id=?
2022-06-21 15:25:25,753 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_ 
    from
        distrito distrito0_ 
    where
        distrito0_.id=?
2022-06-21 15:25:25,755 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        provincia0_.id as id1_8_0_,
        provincia0_.nombre as nombre2_8_0_,
        provincia0_.id_region as id_regio3_8_0_ 
    from
        provincia provincia0_ 
    where
        provincia0_.id=?
2022-06-21 15:25:25,756 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        region0_.id as id1_10_0_,
        region0_.nombre as nombre2_10_0_ 
    from
        region region0_ 
    where
        region0_.id=?
2022-06-21 15:25:25,757 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id=?
2022-06-21 15:25:25,757 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_ 
    from
        microred microred0_ 
    where
        microred0_.id=?
2022-06-21 15:25:25,758 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        redsalud0_.id as id1_9_0_,
        redsalud0_.nombre as nombre2_9_0_ 
    from
        red_salud redsalud0_ 
    where
        redsalud0_.id=?
2022-06-21 15:25:40,413 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 15:25:40,414 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 15:25:40,415 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:25:40,417 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 15:25:40,418 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:25:40,420 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:25:40,421 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:25:40,423 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:25:55,027 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    insert 
    into
        familia
        (asentamiento_humano, direccion, fecha_creacion, lote, manzana, nombre, numero_historia, referencia, sub_sector, telefono, id_titular) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 15:25:57,505 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 15:26:09,450 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    insert 
    into
        persona
        (clasificacion_riesgo, dni, estado_civil, estudios, id_familia, fecha_nacimiento, genero, idioma, nombre_completo, ocupacion, parentesco, pertenencia_etnica, religion, seguro) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 15:26:54,199 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 15:26:54,201 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 15:26:54,203 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:26:54,205 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 15:26:54,206 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:26:54,207 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:26:54,208 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:26:54,209 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 15:27:01,621 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    insert 
    into
        familia
        (asentamiento_humano, direccion, fecha_creacion, lote, manzana, nombre, numero_historia, referencia, sub_sector, telefono, id_titular) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 15:27:02,712 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 15:27:13,371 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    insert 
    into
        persona
        (clasificacion_riesgo, dni, estado_civil, estudios, id_familia, fecha_nacimiento, genero, idioma, nombre_completo, ocupacion, parentesco, pertenencia_etnica, religion, seguro) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 16:43:08,603 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 16:43:08,611 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 16:43:08,617 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 16:43:08,622 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 16:43:08,623 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 16:43:08,625 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 16:43:08,626 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 16:43:08,628 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 16:43:26,187 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 16:43:26,191 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 16:45:47,395 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 16:45:47,398 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 17:31:08,325 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 17:31:08,333 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 17:31:08,340 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 17:31:08,346 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 17:31:08,347 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 17:31:08,349 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 17:31:08,350 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 17:31:08,351 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 17:31:20,889 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    insert 
    into
        familia
        (asentamiento_humano, direccion, fecha_creacion, lote, manzana, nombre, numero_historia, referencia, sub_sector, telefono, id_titular) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 17:31:22,717 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 17:31:35,016 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    insert 
    into
        persona
        (clasificacion_riesgo, dni, estado_civil, estudios, id_familia, fecha_nacimiento, genero, idioma, nombre_completo, ocupacion, parentesco, pertenencia_etnica, religion, seguro) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 17:31:52,678 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    insert 
    into
        persona
        (clasificacion_riesgo, dni, estado_civil, estudios, id_familia, fecha_nacimiento, genero, idioma, nombre_completo, ocupacion, parentesco, pertenencia_etnica, religion, seguro) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 17:35:00,236 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_,
        establecim0_.codigo as codigo2_4_,
        establecim0_.id_microred as id_micro4_4_,
        establecim0_.nombre as nombre3_4_ 
    from
        establecimiento establecim0_
2022-06-21 17:35:00,240 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_,
        redsalud1_.id as id1_9_1_,
        redsalud1_.nombre as nombre2_9_1_ 
    from
        microred microred0_ 
    left outer join
        red_salud redsalud1_ 
            on microred0_.id_redsalud=redsalud1_.id 
    where
        microred0_.id=?
2022-06-21 17:35:00,246 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_,
        redsalud1_.id as id1_9_1_,
        redsalud1_.nombre as nombre2_9_1_ 
    from
        microred microred0_ 
    left outer join
        red_salud redsalud1_ 
            on microred0_.id_redsalud=redsalud1_.id 
    where
        microred0_.id=?
2022-06-21 17:36:15,334 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id as id1_4_,
        establecim0_.codigo as codigo2_4_,
        establecim0_.id_microred as id_micro4_4_,
        establecim0_.nombre as nombre3_4_ 
    from
        establecimiento establecim0_
2022-06-21 17:36:15,336 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_,
        redsalud1_.id as id1_9_1_,
        redsalud1_.nombre as nombre2_9_1_ 
    from
        microred microred0_ 
    left outer join
        red_salud redsalud1_ 
            on microred0_.id_redsalud=redsalud1_.id 
    where
        microred0_.id=?
2022-06-21 17:36:15,337 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_,
        redsalud1_.id as id1_9_1_,
        redsalud1_.nombre as nombre2_9_1_ 
    from
        microred microred0_ 
    left outer join
        red_salud redsalud1_ 
            on microred0_.id_redsalud=redsalud1_.id 
    where
        microred0_.id=?
2022-06-21 17:36:33,569 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_,
        establecim0_.codigo as codigo2_4_,
        establecim0_.id_microred as id_micro4_4_,
        establecim0_.nombre as nombre3_4_ 
    from
        establecimiento establecim0_
2022-06-21 17:36:33,571 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_,
        redsalud1_.id as id1_9_1_,
        redsalud1_.nombre as nombre2_9_1_ 
    from
        microred microred0_ 
    left outer join
        red_salud redsalud1_ 
            on microred0_.id_redsalud=redsalud1_.id 
    where
        microred0_.id=?
2022-06-21 17:36:33,573 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_,
        redsalud1_.id as id1_9_1_,
        redsalud1_.nombre as nombre2_9_1_ 
    from
        microred microred0_ 
    left outer join
        red_salud redsalud1_ 
            on microred0_.id_redsalud=redsalud1_.id 
    where
        microred0_.id=?
2022-06-21 17:36:40,002 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        establecim0_.id as id1_4_,
        establecim0_.codigo as codigo2_4_,
        establecim0_.id_microred as id_micro4_4_,
        establecim0_.nombre as nombre3_4_ 
    from
        establecimiento establecim0_
2022-06-21 17:36:40,005 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_,
        redsalud1_.id as id1_9_1_,
        redsalud1_.nombre as nombre2_9_1_ 
    from
        microred microred0_ 
    left outer join
        red_salud redsalud1_ 
            on microred0_.id_redsalud=redsalud1_.id 
    where
        microred0_.id=?
2022-06-21 17:36:40,008 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_,
        redsalud1_.id as id1_9_1_,
        redsalud1_.nombre as nombre2_9_1_ 
    from
        microred microred0_ 
    left outer join
        red_salud redsalud1_ 
            on microred0_.id_redsalud=redsalud1_.id 
    where
        microred0_.id=?
2022-06-21 17:42:29,468 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2022-06-21 17:42:29,479 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2022-06-21 17:42:29,487 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2022-06-21 20:52:09,907 INFO org.springframework.boot.StartupInfoLogger [main] Starting DiresaApplication using Java 1.8.0_131 on DESKTOP-9477U8E with PID 19176 (C:\Users\User\Documents\sistema familiar\back-saludfamiliar\target\classes started by User in C:\Users\User\Documents\sistema familiar\back-saludfamiliar)
2022-06-21 20:52:09,905 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.2.Final
2022-06-21 20:52:09,912 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2022-06-21 20:52:12,509 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-06-21 20:52:12,757 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 210 ms. Found 7 JPA repository interfaces.
2022-06-21 20:52:14,079 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2022-06-21 20:52:14,096 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2022-06-21 20:52:14,097 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2022-06-21 20:52:14,098 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.58]
2022-06-21 20:52:14,250 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2022-06-21 20:52:14,250 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 4261 ms
2022-06-21 20:52:14,481 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2022-06-21 20:52:17,149 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2022-06-21 20:52:17,311 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2022-06-21 20:52:17,469 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.6.5.Final
2022-06-21 20:52:17,929 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-06-21 20:52:18,268 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2022-06-21 20:52:20,305 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-06-21 20:52:20,338 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-06-21 20:52:21,532 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-06-21 20:52:21,943 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will not secure any request
2022-06-21 20:52:23,199 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2022-06-21 20:52:23,287 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path '/api-pedidos'
2022-06-21 20:52:23,311 INFO org.springframework.boot.StartupInfoLogger [main] Started DiresaApplication in 14.305 seconds (JVM running for 21.695)
2022-06-21 20:53:03,547 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-06-21 20:53:03,548 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2022-06-21 20:53:03,550 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 2 ms
2022-06-21 20:53:08,487 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        usuarioent0_.id_usuario as id_usuar1_11_,
        usuarioent0_.clave as clave2_11_,
        usuarioent0_.nombre as nombre3_11_,
        usuarioent0_.usuario as usuario4_11_ 
    from
        usuario usuarioent0_ 
    where
        usuarioent0_.usuario=?
2022-06-21 20:53:08,592 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        authoritie0_.usuario_id as usuario_1_12_0_,
        authoritie0_.authority_id as authorit2_12_0_,
        authoritye1_.authority_id as authorit1_0_1_,
        authoritye1_.nombre as nombre2_0_1_ 
    from
        usuario_authority authoritie0_ 
    inner join
        authority authoritye1_ 
            on authoritie0_.authority_id=authoritye1_.authority_id 
    where
        authoritie0_.usuario_id=?
2022-06-21 20:53:20,059 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 20:53:20,069 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 20:53:20,469 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 20:53:20,472 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 20:55:37,246 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 20:55:37,250 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 20:55:38,103 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 20:55:38,108 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 20:55:38,920 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 20:55:38,924 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 20:55:40,562 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 20:55:40,567 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 20:55:57,418 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 20:55:57,422 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 20:56:53,185 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 20:56:53,190 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 20:57:04,122 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 20:57:04,126 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 20:58:25,024 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 20:58:25,032 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 20:58:25,037 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 20:58:25,042 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 20:58:25,046 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 20:58:25,050 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 20:58:25,053 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 20:58:25,057 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 20:58:30,566 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 20:58:30,579 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 20:58:33,911 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 20:58:33,915 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 20:58:33,918 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 20:58:33,922 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 20:58:33,925 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 20:58:33,927 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 20:58:33,930 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 20:58:33,934 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 20:59:06,057 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        redsalud0_.id as id1_9_,
        redsalud0_.nombre as nombre2_9_ 
    from
        red_salud redsalud0_
2022-06-21 20:59:06,070 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        microredes0_.id_redsalud as id_redsa3_6_0_,
        microredes0_.id as id1_6_0_,
        microredes0_.id as id1_6_1_,
        microredes0_.nombre as nombre2_6_1_,
        microredes0_.id_redsalud as id_redsa3_6_1_ 
    from
        microred microredes0_ 
    where
        microredes0_.id_redsalud=?
2022-06-21 20:59:06,073 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.id as id1_4_0_,
        establecim0_.id as id1_4_1_,
        establecim0_.codigo as codigo2_4_1_,
        establecim0_.id_microred as id_micro4_4_1_,
        establecim0_.nombre as nombre3_4_1_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id_microred=?
2022-06-21 20:59:06,079 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.id as id1_4_0_,
        establecim0_.id as id1_4_1_,
        establecim0_.codigo as codigo2_4_1_,
        establecim0_.id_microred as id_micro4_4_1_,
        establecim0_.nombre as nombre3_4_1_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id_microred=?
2022-06-21 20:59:06,150 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        provincia0_.id as id1_8_,
        provincia0_.nombre as nombre2_8_,
        provincia0_.id_region as id_regio3_8_ 
    from
        provincia provincia0_
2022-06-21 20:59:06,153 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        region0_.id as id1_10_0_,
        region0_.nombre as nombre2_10_0_ 
    from
        region region0_ 
    where
        region0_.id=?
2022-06-21 20:59:06,158 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 20:59:06,164 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 20:59:06,167 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 20:59:17,729 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        redsalud0_.id as id1_9_,
        redsalud0_.nombre as nombre2_9_ 
    from
        red_salud redsalud0_
2022-06-21 20:59:17,732 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        microredes0_.id_redsalud as id_redsa3_6_0_,
        microredes0_.id as id1_6_0_,
        microredes0_.id as id1_6_1_,
        microredes0_.nombre as nombre2_6_1_,
        microredes0_.id_redsalud as id_redsa3_6_1_ 
    from
        microred microredes0_ 
    where
        microredes0_.id_redsalud=?
2022-06-21 20:59:17,735 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.id as id1_4_0_,
        establecim0_.id as id1_4_1_,
        establecim0_.codigo as codigo2_4_1_,
        establecim0_.id_microred as id_micro4_4_1_,
        establecim0_.nombre as nombre3_4_1_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id_microred=?
2022-06-21 20:59:17,737 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.id as id1_4_0_,
        establecim0_.id as id1_4_1_,
        establecim0_.codigo as codigo2_4_1_,
        establecim0_.id_microred as id_micro4_4_1_,
        establecim0_.nombre as nombre3_4_1_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id_microred=?
2022-06-21 20:59:17,781 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        provincia0_.id as id1_8_,
        provincia0_.nombre as nombre2_8_,
        provincia0_.id_region as id_regio3_8_ 
    from
        provincia provincia0_
2022-06-21 20:59:17,783 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        region0_.id as id1_10_0_,
        region0_.nombre as nombre2_10_0_ 
    from
        region region0_ 
    where
        region0_.id=?
2022-06-21 20:59:17,787 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 20:59:17,791 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 20:59:17,796 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 20:59:27,513 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        redsalud0_.id as id1_9_,
        redsalud0_.nombre as nombre2_9_ 
    from
        red_salud redsalud0_
2022-06-21 20:59:27,516 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        microredes0_.id_redsalud as id_redsa3_6_0_,
        microredes0_.id as id1_6_0_,
        microredes0_.id as id1_6_1_,
        microredes0_.nombre as nombre2_6_1_,
        microredes0_.id_redsalud as id_redsa3_6_1_ 
    from
        microred microredes0_ 
    where
        microredes0_.id_redsalud=?
2022-06-21 20:59:27,519 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.id as id1_4_0_,
        establecim0_.id as id1_4_1_,
        establecim0_.codigo as codigo2_4_1_,
        establecim0_.id_microred as id_micro4_4_1_,
        establecim0_.nombre as nombre3_4_1_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id_microred=?
2022-06-21 20:59:27,524 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.id as id1_4_0_,
        establecim0_.id as id1_4_1_,
        establecim0_.codigo as codigo2_4_1_,
        establecim0_.id_microred as id_micro4_4_1_,
        establecim0_.nombre as nombre3_4_1_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id_microred=?
2022-06-21 20:59:27,562 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        provincia0_.id as id1_8_,
        provincia0_.nombre as nombre2_8_,
        provincia0_.id_region as id_regio3_8_ 
    from
        provincia provincia0_
2022-06-21 20:59:27,564 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        region0_.id as id1_10_0_,
        region0_.nombre as nombre2_10_0_ 
    from
        region region0_ 
    where
        region0_.id=?
2022-06-21 20:59:27,568 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 20:59:27,572 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 20:59:27,575 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 21:00:14,549 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        redsalud0_.id as id1_9_,
        redsalud0_.nombre as nombre2_9_ 
    from
        red_salud redsalud0_
2022-06-21 21:00:14,553 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        microredes0_.id_redsalud as id_redsa3_6_0_,
        microredes0_.id as id1_6_0_,
        microredes0_.id as id1_6_1_,
        microredes0_.nombre as nombre2_6_1_,
        microredes0_.id_redsalud as id_redsa3_6_1_ 
    from
        microred microredes0_ 
    where
        microredes0_.id_redsalud=?
2022-06-21 21:00:14,556 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.id as id1_4_0_,
        establecim0_.id as id1_4_1_,
        establecim0_.codigo as codigo2_4_1_,
        establecim0_.id_microred as id_micro4_4_1_,
        establecim0_.nombre as nombre3_4_1_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id_microred=?
2022-06-21 21:00:14,559 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.id as id1_4_0_,
        establecim0_.id as id1_4_1_,
        establecim0_.codigo as codigo2_4_1_,
        establecim0_.id_microred as id_micro4_4_1_,
        establecim0_.nombre as nombre3_4_1_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id_microred=?
2022-06-21 21:00:14,590 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        provincia0_.id as id1_8_,
        provincia0_.nombre as nombre2_8_,
        provincia0_.id_region as id_regio3_8_ 
    from
        provincia provincia0_
2022-06-21 21:00:14,592 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        region0_.id as id1_10_0_,
        region0_.nombre as nombre2_10_0_ 
    from
        region region0_ 
    where
        region0_.id=?
2022-06-21 21:00:14,596 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 21:00:14,598 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 21:00:14,600 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 21:00:31,469 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        redsalud0_.id as id1_9_,
        redsalud0_.nombre as nombre2_9_ 
    from
        red_salud redsalud0_
2022-06-21 21:00:31,472 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        microredes0_.id_redsalud as id_redsa3_6_0_,
        microredes0_.id as id1_6_0_,
        microredes0_.id as id1_6_1_,
        microredes0_.nombre as nombre2_6_1_,
        microredes0_.id_redsalud as id_redsa3_6_1_ 
    from
        microred microredes0_ 
    where
        microredes0_.id_redsalud=?
2022-06-21 21:00:31,474 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.id as id1_4_0_,
        establecim0_.id as id1_4_1_,
        establecim0_.codigo as codigo2_4_1_,
        establecim0_.id_microred as id_micro4_4_1_,
        establecim0_.nombre as nombre3_4_1_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id_microred=?
2022-06-21 21:00:31,477 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.id as id1_4_0_,
        establecim0_.id as id1_4_1_,
        establecim0_.codigo as codigo2_4_1_,
        establecim0_.id_microred as id_micro4_4_1_,
        establecim0_.nombre as nombre3_4_1_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id_microred=?
2022-06-21 21:00:31,536 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        provincia0_.id as id1_8_,
        provincia0_.nombre as nombre2_8_,
        provincia0_.id_region as id_regio3_8_ 
    from
        provincia provincia0_
2022-06-21 21:00:31,538 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        region0_.id as id1_10_0_,
        region0_.nombre as nombre2_10_0_ 
    from
        region region0_ 
    where
        region0_.id=?
2022-06-21 21:00:31,541 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 21:00:31,544 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 21:00:31,545 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 21:02:26,617 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        establecim0_.id as id1_4_,
        establecim0_.codigo as codigo2_4_,
        establecim0_.id_microred as id_micro4_4_,
        establecim0_.nombre as nombre3_4_ 
    from
        establecimiento establecim0_
2022-06-21 21:02:26,621 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_,
        redsalud1_.id as id1_9_1_,
        redsalud1_.nombre as nombre2_9_1_ 
    from
        microred microred0_ 
    left outer join
        red_salud redsalud1_ 
            on microred0_.id_redsalud=redsalud1_.id 
    where
        microred0_.id=?
2022-06-21 21:02:26,625 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_,
        redsalud1_.id as id1_9_1_,
        redsalud1_.nombre as nombre2_9_1_ 
    from
        microred microred0_ 
    left outer join
        red_salud redsalud1_ 
            on microred0_.id_redsalud=redsalud1_.id 
    where
        microred0_.id=?
2022-06-21 21:05:45,611 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        establecim0_.id as id1_4_,
        establecim0_.codigo as codigo2_4_,
        establecim0_.id_microred as id_micro4_4_,
        establecim0_.nombre as nombre3_4_ 
    from
        establecimiento establecim0_
2022-06-21 21:05:45,615 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_,
        redsalud1_.id as id1_9_1_,
        redsalud1_.nombre as nombre2_9_1_ 
    from
        microred microred0_ 
    left outer join
        red_salud redsalud1_ 
            on microred0_.id_redsalud=redsalud1_.id 
    where
        microred0_.id=?
2022-06-21 21:05:45,619 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_,
        redsalud1_.id as id1_9_1_,
        redsalud1_.nombre as nombre2_9_1_ 
    from
        microred microred0_ 
    left outer join
        red_salud redsalud1_ 
            on microred0_.id_redsalud=redsalud1_.id 
    where
        microred0_.id=?
2022-06-21 21:06:04,654 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        redsalud0_.id as id1_9_,
        redsalud0_.nombre as nombre2_9_ 
    from
        red_salud redsalud0_
2022-06-21 21:06:04,656 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        microredes0_.id_redsalud as id_redsa3_6_0_,
        microredes0_.id as id1_6_0_,
        microredes0_.id as id1_6_1_,
        microredes0_.nombre as nombre2_6_1_,
        microredes0_.id_redsalud as id_redsa3_6_1_ 
    from
        microred microredes0_ 
    where
        microredes0_.id_redsalud=?
2022-06-21 21:06:04,659 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.id as id1_4_0_,
        establecim0_.id as id1_4_1_,
        establecim0_.codigo as codigo2_4_1_,
        establecim0_.id_microred as id_micro4_4_1_,
        establecim0_.nombre as nombre3_4_1_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id_microred=?
2022-06-21 21:06:04,661 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.id as id1_4_0_,
        establecim0_.id as id1_4_1_,
        establecim0_.codigo as codigo2_4_1_,
        establecim0_.id_microred as id_micro4_4_1_,
        establecim0_.nombre as nombre3_4_1_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id_microred=?
2022-06-21 21:06:04,697 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        provincia0_.id as id1_8_,
        provincia0_.nombre as nombre2_8_,
        provincia0_.id_region as id_regio3_8_ 
    from
        provincia provincia0_
2022-06-21 21:06:04,698 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        region0_.id as id1_10_0_,
        region0_.nombre as nombre2_10_0_ 
    from
        region region0_ 
    where
        region0_.id=?
2022-06-21 21:06:04,702 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 21:06:04,705 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 21:06:04,707 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 21:06:54,311 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    insert 
    into
        empleado
        (id_distrito, dni, id_establecimiento, nombre) 
    values
        (?, ?, ?, ?)
2022-06-21 21:06:54,533 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 21:06:54,538 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 21:06:54,544 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:06:54,549 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 21:06:54,553 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:06:54,557 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:06:54,562 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:06:54,566 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:06:54,570 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:08:01,286 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    insert 
    into
        familia
        (asentamiento_humano, direccion, fecha_creacion, lote, manzana, nombre, numero_historia, referencia, sub_sector, telefono, id_titular) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 21:09:07,399 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 21:17:43,037 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-4] Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.util.Date` from String "199-04-04": not a valid representation (error: Failed to parse Date value '199-04-04': Cannot parse date "199-04-04": not compatible with any of standard forms ("yyyy-MM-dd'T'HH:mm:ss.SSSX", "yyyy-MM-dd'T'HH:mm:ss.SSS", "EEE, dd MMM yyyy HH:mm:ss zzz", "yyyy-MM-dd")); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.util.Date` from String "199-04-04": not a valid representation (error: Failed to parse Date value '199-04-04': Cannot parse date "199-04-04": not compatible with any of standard forms ("yyyy-MM-dd'T'HH:mm:ss.SSSX", "yyyy-MM-dd'T'HH:mm:ss.SSS", "EEE, dd MMM yyyy HH:mm:ss zzz", "yyyy-MM-dd"))<EOL> at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 113] (through reference chain: com.example.DIRESA.entity.general.Persona["fechaNacimiento"])]
2022-06-21 21:17:57,039 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    insert 
    into
        persona
        (clasificacion_riesgo, dni, estado_civil, estudios, id_familia, fecha_nacimiento, genero, idioma, nombre_completo, ocupacion, parentesco, pertenencia_etnica, religion, seguro) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 21:18:14,900 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 21:18:14,904 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 21:18:14,913 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:18:14,916 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 21:18:14,920 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:18:14,923 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:18:14,925 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:18:14,927 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:18:14,929 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:18:29,582 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    insert 
    into
        familia
        (asentamiento_humano, direccion, fecha_creacion, lote, manzana, nombre, numero_historia, referencia, sub_sector, telefono, id_titular) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 21:18:37,028 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 21:18:57,426 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 21:18:57,430 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 21:18:57,434 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:18:57,437 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 21:18:57,442 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:18:57,446 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:18:57,449 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:18:57,452 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:18:57,455 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:21:12,504 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 21:21:12,508 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 21:21:12,511 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:21:12,514 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 21:21:12,516 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:21:12,519 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:21:12,521 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:21:12,524 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:21:12,526 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:21:23,214 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    insert 
    into
        familia
        (asentamiento_humano, direccion, fecha_creacion, lote, manzana, nombre, numero_historia, referencia, sub_sector, telefono, id_titular) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 21:21:29,091 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 21:21:34,831 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 21:21:34,834 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 21:21:34,837 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:21:34,840 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 21:21:34,843 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:21:34,847 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:21:34,850 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:21:34,853 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:21:34,856 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:21:44,183 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    insert 
    into
        familia
        (asentamiento_humano, direccion, fecha_creacion, lote, manzana, nombre, numero_historia, referencia, sub_sector, telefono, id_titular) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 21:21:57,547 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    insert 
    into
        encuesta
        (condicion_encuesta, id_familia, fecha_visita, forma_visita, numero_visita, observacion) 
    values
        (?, ?, ?, ?, ?, ?)
2022-06-21 21:22:26,305 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    insert 
    into
        persona
        (clasificacion_riesgo, dni, estado_civil, estudios, id_familia, fecha_nacimiento, genero, idioma, nombre_completo, ocupacion, parentesco, pertenencia_etnica, religion, seguro) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 21:22:26,424 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-9] SQL Error: 0, SQLState: 22001
2022-06-21 21:22:26,428 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8080-exec-9] ERROR: el valor es demasiado largo para el tipo character(12)
2022-06-21 21:22:26,499 ERROR com.example.DIRESA.controller.general.PersonasController [http-nio-8080-exec-9] could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not execute statement
org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not execute statement
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:280)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:233)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy128.save(Unknown Source)
	at com.example.DIRESA.service.procesos.implemen.PersonaImplements.add(PersonaImplements.java:52)
	at com.example.DIRESA.service.procesos.implemen.PersonaImplements.add(PersonaImplements.java:21)
	at com.example.DIRESA.service.procesos.implemen.PersonaImplements$$FastClassBySpringCGLIB$$ddd69015.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.example.DIRESA.service.procesos.implemen.PersonaImplements$$EnhancerBySpringCGLIB$$74e58fc7.add(<generated>)
	at com.example.DIRESA.controller.general.PersonasController.add(PersonasController.java:70)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at com.example.DIRESA.controller.seguridad.JWTAuthorizationFilter.doFilterInternal(JWTAuthorizationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:219)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:213)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1735)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.hibernate.exception.DataException: could not execute statement
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:115)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:200)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:58)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3279)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3885)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:760)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:746)
	at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy118.persist(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy118.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:637)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:639)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 116 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: el valor es demasiado largo para el tipo character(12)
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:166)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:134)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	... 167 common frames omitted
2022-06-21 21:22:37,252 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    insert 
    into
        persona
        (clasificacion_riesgo, dni, estado_civil, estudios, id_familia, fecha_nacimiento, genero, idioma, nombre_completo, ocupacion, parentesco, pertenencia_etnica, religion, seguro) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 21:22:57,149 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    insert 
    into
        persona
        (clasificacion_riesgo, dni, estado_civil, estudios, id_familia, fecha_nacimiento, genero, idioma, nombre_completo, ocupacion, parentesco, pertenencia_etnica, religion, seguro) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-21 21:23:04,397 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 21:23:12,341 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 21:23:24,031 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 21:23:24,039 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 21:25:17,945 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 21:25:17,951 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 21:25:36,065 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        persona0_.id as id1_7_0_,
        persona0_.clasificacion_riesgo as clasific2_7_0_,
        persona0_.dni as dni3_7_0_,
        persona0_.estado_civil as estado_c4_7_0_,
        persona0_.estudios as estudios5_7_0_,
        persona0_.id_familia as id_fami15_7_0_,
        persona0_.fecha_nacimiento as fecha_na6_7_0_,
        persona0_.genero as genero7_7_0_,
        persona0_.idioma as idioma8_7_0_,
        persona0_.nombre_completo as nombre_c9_7_0_,
        persona0_.ocupacion as ocupaci10_7_0_,
        persona0_.parentesco as parente11_7_0_,
        persona0_.pertenencia_etnica as pertene12_7_0_,
        persona0_.religion as religio13_7_0_,
        persona0_.seguro as seguro14_7_0_ 
    from
        persona persona0_ 
    where
        persona0_.id=?
2022-06-21 21:25:36,070 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_ 
    from
        familia familia0_ 
    where
        familia0_.id=?
2022-06-21 21:25:36,074 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_ 
    from
        empleado empleado0_ 
    where
        empleado0_.id=?
2022-06-21 21:25:36,078 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_ 
    from
        distrito distrito0_ 
    where
        distrito0_.id=?
2022-06-21 21:25:36,083 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        provincia0_.id as id1_8_0_,
        provincia0_.nombre as nombre2_8_0_,
        provincia0_.id_region as id_regio3_8_0_ 
    from
        provincia provincia0_ 
    where
        provincia0_.id=?
2022-06-21 21:25:36,087 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        region0_.id as id1_10_0_,
        region0_.nombre as nombre2_10_0_ 
    from
        region region0_ 
    where
        region0_.id=?
2022-06-21 21:25:36,090 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id=?
2022-06-21 21:25:36,093 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_ 
    from
        microred microred0_ 
    where
        microred0_.id=?
2022-06-21 21:25:36,098 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        redsalud0_.id as id1_9_0_,
        redsalud0_.nombre as nombre2_9_0_ 
    from
        red_salud redsalud0_ 
    where
        redsalud0_.id=?
2022-06-21 21:25:36,139 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    update
        persona 
    set
        clasificacion_riesgo=?,
        dni=?,
        estado_civil=?,
        estudios=?,
        id_familia=?,
        fecha_nacimiento=?,
        genero=?,
        idioma=?,
        nombre_completo=?,
        ocupacion=?,
        parentesco=?,
        pertenencia_etnica=?,
        religion=?,
        seguro=? 
    where
        id=?
2022-06-21 21:25:40,234 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 21:25:40,239 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 21:25:40,505 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 21:25:40,508 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 21:25:41,046 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 21:25:41,049 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 21:25:41,208 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 21:25:41,211 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 21:25:41,539 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 21:25:41,542 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 21:25:41,707 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 21:25:41,710 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 21:25:41,864 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 21:25:41,867 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 21:25:42,129 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 21:25:42,133 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 21:25:42,304 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 21:25:42,306 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 21:25:42,633 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 21:25:42,636 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 21:25:42,811 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 21:25:42,814 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 21:25:42,986 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 21:25:42,989 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 21:25:43,155 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 21:25:43,158 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 21:26:13,225 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 21:26:13,228 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 21:26:14,401 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 21:26:14,404 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 21:26:14,549 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 21:26:14,552 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 21:26:14,702 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 21:26:14,705 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 21:26:14,836 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 21:26:14,838 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 21:26:14,992 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 21:26:14,994 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 21:26:15,127 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 21:26:15,129 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 21:26:15,286 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 21:26:15,290 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 21:26:15,444 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 21:26:15,448 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 21:26:27,772 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_ 
    where
        empleado0_.dni=?
2022-06-21 21:26:33,405 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_ 
    where
        empleado0_.dni=?
2022-06-21 21:26:39,873 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_ 
    where
        empleado0_.dni=?
2022-06-21 21:26:48,785 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_ 
    where
        empleado0_.dni=?
2022-06-21 21:26:48,788 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 21:26:48,790 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:26:52,056 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        redsalud0_.id as id1_9_,
        redsalud0_.nombre as nombre2_9_ 
    from
        red_salud redsalud0_
2022-06-21 21:26:52,059 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        microredes0_.id_redsalud as id_redsa3_6_0_,
        microredes0_.id as id1_6_0_,
        microredes0_.id as id1_6_1_,
        microredes0_.nombre as nombre2_6_1_,
        microredes0_.id_redsalud as id_redsa3_6_1_ 
    from
        microred microredes0_ 
    where
        microredes0_.id_redsalud=?
2022-06-21 21:26:52,062 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.id as id1_4_0_,
        establecim0_.id as id1_4_1_,
        establecim0_.codigo as codigo2_4_1_,
        establecim0_.id_microred as id_micro4_4_1_,
        establecim0_.nombre as nombre3_4_1_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id_microred=?
2022-06-21 21:26:52,065 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.id as id1_4_0_,
        establecim0_.id as id1_4_1_,
        establecim0_.codigo as codigo2_4_1_,
        establecim0_.id_microred as id_micro4_4_1_,
        establecim0_.nombre as nombre3_4_1_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id_microred=?
2022-06-21 21:26:52,132 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        provincia0_.id as id1_8_,
        provincia0_.nombre as nombre2_8_,
        provincia0_.id_region as id_regio3_8_ 
    from
        provincia provincia0_
2022-06-21 21:26:52,134 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        region0_.id as id1_10_0_,
        region0_.nombre as nombre2_10_0_ 
    from
        region region0_ 
    where
        region0_.id=?
2022-06-21 21:26:52,137 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 21:26:52,140 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 21:26:52,143 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distritos0_.id_provincia as id_provi3_1_0_,
        distritos0_.id as id1_1_0_,
        distritos0_.id as id1_1_1_,
        distritos0_.nombre as nombre2_1_1_,
        distritos0_.id_provincia as id_provi3_1_1_ 
    from
        distrito distritos0_ 
    where
        distritos0_.id_provincia=?
2022-06-21 21:27:01,439 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_ 
    from
        empleado empleado0_ 
    where
        empleado0_.id=?
2022-06-21 21:27:01,443 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_ 
    from
        distrito distrito0_ 
    where
        distrito0_.id=?
2022-06-21 21:27:01,445 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        provincia0_.id as id1_8_0_,
        provincia0_.nombre as nombre2_8_0_,
        provincia0_.id_region as id_regio3_8_0_ 
    from
        provincia provincia0_ 
    where
        provincia0_.id=?
2022-06-21 21:27:01,447 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        region0_.id as id1_10_0_,
        region0_.nombre as nombre2_10_0_ 
    from
        region region0_ 
    where
        region0_.id=?
2022-06-21 21:27:01,450 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id=?
2022-06-21 21:27:01,452 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_ 
    from
        microred microred0_ 
    where
        microred0_.id=?
2022-06-21 21:27:01,454 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        redsalud0_.id as id1_9_0_,
        redsalud0_.nombre as nombre2_9_0_ 
    from
        red_salud redsalud0_ 
    where
        redsalud0_.id=?
2022-06-21 21:27:01,457 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:27:01,462 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    update
        empleado 
    set
        id_distrito=?,
        dni=?,
        id_establecimiento=?,
        nombre=? 
    where
        id=?
2022-06-21 21:27:04,166 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_ 
    where
        empleado0_.dni=?
2022-06-21 21:27:04,169 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 21:27:04,171 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:27:04,621 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_ 
    where
        empleado0_.dni=?
2022-06-21 21:27:04,623 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 21:27:04,626 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:27:04,799 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_ 
    where
        empleado0_.dni=?
2022-06-21 21:27:04,801 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 21:27:04,803 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:27:04,969 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_ 
    where
        empleado0_.dni=?
2022-06-21 21:27:04,971 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 21:27:04,974 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:27:05,135 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_ 
    where
        empleado0_.dni=?
2022-06-21 21:27:05,137 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 21:27:05,140 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:27:14,992 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 21:27:14,997 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 21:27:17,415 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 21:27:17,418 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 21:27:17,421 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:27:17,424 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 21:27:17,428 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:27:17,431 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:27:17,433 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:27:17,436 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:27:17,438 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-9] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:27:24,083 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_ 
    from
        familia familia0_ 
    where
        familia0_.id=?
2022-06-21 21:27:24,085 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_ 
    from
        empleado empleado0_ 
    where
        empleado0_.id=?
2022-06-21 21:27:24,087 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_ 
    from
        distrito distrito0_ 
    where
        distrito0_.id=?
2022-06-21 21:27:24,088 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        provincia0_.id as id1_8_0_,
        provincia0_.nombre as nombre2_8_0_,
        provincia0_.id_region as id_regio3_8_0_ 
    from
        provincia provincia0_ 
    where
        provincia0_.id=?
2022-06-21 21:27:24,090 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        region0_.id as id1_10_0_,
        region0_.nombre as nombre2_10_0_ 
    from
        region region0_ 
    where
        region0_.id=?
2022-06-21 21:27:24,092 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_ 
    from
        establecimiento establecim0_ 
    where
        establecim0_.id=?
2022-06-21 21:27:24,095 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        microred0_.id as id1_6_0_,
        microred0_.nombre as nombre2_6_0_,
        microred0_.id_redsalud as id_redsa3_6_0_ 
    from
        microred microred0_ 
    where
        microred0_.id=?
2022-06-21 21:27:24,096 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        redsalud0_.id as id1_9_0_,
        redsalud0_.nombre as nombre2_9_0_ 
    from
        red_salud redsalud0_ 
    where
        redsalud0_.id=?
2022-06-21 21:27:24,099 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 21:27:24,101 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    update
        familia 
    set
        asentamiento_humano=?,
        direccion=?,
        fecha_creacion=?,
        lote=?,
        manzana=?,
        nombre=?,
        numero_historia=?,
        referencia=?,
        sub_sector=?,
        telefono=?,
        id_titular=? 
    where
        id=?
2022-06-21 21:27:26,255 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 21:27:26,259 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 21:27:26,750 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 21:27:26,753 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 21:27:27,690 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 21:27:27,693 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 21:27:27,695 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:27:27,698 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 21:27:27,700 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:27:27,702 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:27:27,704 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:27:27,706 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:27:27,707 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:32:14,035 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        persona0_.id as id1_7_,
        persona0_.clasificacion_riesgo as clasific2_7_,
        persona0_.dni as dni3_7_,
        persona0_.estado_civil as estado_c4_7_,
        persona0_.estudios as estudios5_7_,
        persona0_.id_familia as id_fami15_7_,
        persona0_.fecha_nacimiento as fecha_na6_7_,
        persona0_.genero as genero7_7_,
        persona0_.idioma as idioma8_7_,
        persona0_.nombre_completo as nombre_c9_7_,
        persona0_.ocupacion as ocupaci10_7_,
        persona0_.parentesco as parente11_7_,
        persona0_.pertenencia_etnica as pertene12_7_,
        persona0_.religion as religio13_7_,
        persona0_.seguro as seguro14_7_ 
    from
        persona persona0_ 
    where
        persona0_.dni=?
2022-06-21 21:32:14,038 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        familia0_.id as id1_5_0_,
        familia0_.asentamiento_humano as asentami2_5_0_,
        familia0_.direccion as direccio3_5_0_,
        familia0_.fecha_creacion as fecha_cr4_5_0_,
        familia0_.lote as lote5_5_0_,
        familia0_.manzana as manzana6_5_0_,
        familia0_.nombre as nombre7_5_0_,
        familia0_.numero_historia as numero_h8_5_0_,
        familia0_.referencia as referenc9_5_0_,
        familia0_.sub_sector as sub_sec10_5_0_,
        familia0_.telefono as telefon11_5_0_,
        familia0_.id_titular as id_titu12_5_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_8_3_,
        provincia3_.nombre as nombre2_8_3_,
        provincia3_.id_region as id_regio3_8_3_,
        region4_.id as id1_10_4_,
        region4_.nombre as nombre2_10_4_,
        establecim5_.id as id1_4_5_,
        establecim5_.codigo as codigo2_4_5_,
        establecim5_.id_microred as id_micro4_4_5_,
        establecim5_.nombre as nombre3_4_5_,
        microred6_.id as id1_6_6_,
        microred6_.nombre as nombre2_6_6_,
        microred6_.id_redsalud as id_redsa3_6_6_,
        redsalud7_.id as id1_9_7_,
        redsalud7_.nombre as nombre2_9_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-21 21:33:08,531 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_
2022-06-21 21:33:08,534 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 21:33:08,537 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:33:08,540 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_8_1_,
        provincia1_.nombre as nombre2_8_1_,
        provincia1_.id_region as id_regio3_8_1_,
        region2_.id as id1_10_2_,
        region2_.nombre as nombre2_10_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-21 21:33:08,543 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:33:08,545 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:33:08,548 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:33:08,549 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:33:08,552 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        establecim0_.id as id1_4_0_,
        establecim0_.codigo as codigo2_4_0_,
        establecim0_.id_microred as id_micro4_4_0_,
        establecim0_.nombre as nombre3_4_0_,
        microred1_.id as id1_6_1_,
        microred1_.nombre as nombre2_6_1_,
        microred1_.id_redsalud as id_redsa3_6_1_,
        redsalud2_.id as id1_9_2_,
        redsalud2_.nombre as nombre2_9_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-21 21:36:48,150 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        familia0_.id as id1_5_,
        familia0_.asentamiento_humano as asentami2_5_,
        familia0_.direccion as direccio3_5_,
        familia0_.fecha_creacion as fecha_cr4_5_,
        familia0_.lote as lote5_5_,
        familia0_.manzana as manzana6_5_,
        familia0_.nombre as nombre7_5_,
        familia0_.numero_historia as numero_h8_5_,
        familia0_.referencia as referenc9_5_,
        familia0_.sub_sector as sub_sec10_5_,
        familia0_.telefono as telefon11_5_,
        familia0_.id_titular as id_titu12_5_ 
    from
        familia familia0_ 
    where
        upper(familia0_.nombre) like upper(?) limit ?
2022-06-21 21:36:48,153 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_8_2_,
        provincia2_.nombre as nombre2_8_2_,
        provincia2_.id_region as id_regio3_8_2_,
        region3_.id as id1_10_3_,
        region3_.nombre as nombre2_10_3_,
        establecim4_.id as id1_4_4_,
        establecim4_.codigo as codigo2_4_4_,
        establecim4_.id_microred as id_micro4_4_4_,
        establecim4_.nombre as nombre3_4_4_,
        microred5_.id as id1_6_5_,
        microred5_.nombre as nombre2_6_5_,
        microred5_.id_redsalud as id_redsa3_6_5_,
        redsalud6_.id as id1_9_6_,
        redsalud6_.nombre as nombre2_9_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-21 21:48:02,642 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2022-06-21 21:48:02,646 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2022-06-21 21:48:02,658 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
