2022-06-08 08:14:54,634 WARN com.zaxxer.hikari.pool.HikariPool$HouseKeeper [HikariPool-1 housekeeper] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=9h6m35s195ms202Âµs700ns).
2022-06-08 08:18:43,343 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.2.Final
2022-06-08 08:18:43,348 INFO org.springframework.boot.StartupInfoLogger [main] Starting DiresaApplication using Java 16.0.2 on DESKTOP-G0S6I9N with PID 7996 (E:\eclipse\PROYECTOS\DIRESA5\target\classes started by USUARIO in E:\eclipse\PROYECTOS\DIRESA5)
2022-06-08 08:18:43,352 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2022-06-08 08:18:44,748 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-06-08 08:18:44,873 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 110 ms. Found 6 JPA repository interfaces.
2022-06-08 08:18:46,189 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2022-06-08 08:18:46,200 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2022-06-08 08:18:46,201 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2022-06-08 08:18:46,201 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.58]
2022-06-08 08:18:46,359 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2022-06-08 08:18:46,359 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 2895 ms
2022-06-08 08:18:46,562 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2022-06-08 08:18:46,997 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2022-06-08 08:18:47,075 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2022-06-08 08:18:47,195 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.6.5.Final
2022-06-08 08:18:47,632 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-06-08 08:18:47,928 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2022-06-08 08:18:49,373 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-06-08 08:18:49,388 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-06-08 08:18:50,471 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-06-08 08:18:50,759 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will not secure any request
2022-06-08 08:18:51,196 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2022-06-08 08:18:51,364 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path '/api-pedidos'
2022-06-08 08:18:51,380 INFO org.springframework.boot.StartupInfoLogger [main] Started DiresaApplication in 8.839 seconds (JVM running for 9.518)
2022-06-08 08:20:52,946 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-06-08 08:20:52,947 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-2] Initializing Servlet 'dispatcherServlet'
2022-06-08 08:20:52,951 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-2] Completed initialization in 3 ms
2022-06-08 08:20:53,365 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        usuarioent0_.id_usuario as id_usuar1_10_,
        usuarioent0_.clave as clave2_10_,
        usuarioent0_.nombre as nombre3_10_,
        usuarioent0_.usuario as usuario4_10_ 
    from
        usuario usuarioent0_ 
    where
        usuarioent0_.usuario=?
2022-06-08 08:20:53,421 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        authoritie0_.usuario_id as usuario_1_11_0_,
        authoritie0_.authority_id as authorit2_11_0_,
        authoritye1_.authority_id as authorit1_0_1_,
        authoritye1_.nombre as nombre2_0_1_ 
    from
        usuario_authority authoritie0_ 
    inner join
        authority authoritye1_ 
            on authoritie0_.authority_id=authoritye1_.authority_id 
    where
        authoritie0_.usuario_id=?
2022-06-08 08:24:22,493 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        usuarioent0_.id_usuario as id_usuar1_10_,
        usuarioent0_.clave as clave2_10_,
        usuarioent0_.nombre as nombre3_10_,
        usuarioent0_.usuario as usuario4_10_ 
    from
        usuario usuarioent0_ 
    where
        usuarioent0_.usuario=?
2022-06-08 08:24:22,495 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        authoritie0_.usuario_id as usuario_1_11_0_,
        authoritie0_.authority_id as authorit2_11_0_,
        authoritye1_.authority_id as authorit1_0_1_,
        authoritye1_.nombre as nombre2_0_1_ 
    from
        usuario_authority authoritie0_ 
    inner join
        authority authoritye1_ 
            on authoritie0_.authority_id=authoritye1_.authority_id 
    where
        authoritie0_.usuario_id=?
2022-06-08 08:27:48,715 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_7_2_,
        provincia2_.nombre as nombre2_7_2_,
        provincia2_.id_region as id_regio3_7_2_,
        region3_.id as id1_9_3_,
        region3_.nombre as nombre2_9_3_,
        establecim4_.id as id1_3_4_,
        establecim4_.codigo as codigo2_3_4_,
        establecim4_.id_microred as id_micro4_3_4_,
        establecim4_.nombre as nombre3_3_4_,
        microred5_.id as id1_5_5_,
        microred5_.nombre as nombre2_5_5_,
        microred5_.id_redsalud as id_redsa3_5_5_,
        redsalud6_.id as id1_8_6_,
        redsalud6_.nombre as nombre2_8_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-08 08:28:33,800 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        persona0_.id as id1_6_0_,
        persona0_.clasificacion_riesgo as clasific2_6_0_,
        persona0_.dni as dni3_6_0_,
        persona0_.estado_civil as estado_c4_6_0_,
        persona0_.estudios as estudios5_6_0_,
        persona0_.id_familia as id_fami15_6_0_,
        persona0_.fecha_nacimiento as fecha_na6_6_0_,
        persona0_.genero as genero7_6_0_,
        persona0_.idioma as idioma8_6_0_,
        persona0_.nombre_completo as nombre_c9_6_0_,
        persona0_.ocupacion as ocupaci10_6_0_,
        persona0_.parentesco as parente11_6_0_,
        persona0_.pertenencia_etnica as pertene12_6_0_,
        persona0_.religion as religio13_6_0_,
        persona0_.seguro as seguro14_6_0_,
        familia1_.id as id1_4_1_,
        familia1_.asentamiento_humano as asentami2_4_1_,
        familia1_.direccion as direccio3_4_1_,
        familia1_.fecha_creacion as fecha_cr4_4_1_,
        familia1_.lote as lote5_4_1_,
        familia1_.manzana as manzana6_4_1_,
        familia1_.nombre as nombre7_4_1_,
        familia1_.numero_historia as numero_h8_4_1_,
        familia1_.referencia as referenc9_4_1_,
        familia1_.sub_sector as sub_sec10_4_1_,
        familia1_.telefono as telefon11_4_1_,
        familia1_.id_titular as id_titu12_4_1_,
        empleado2_.id as id1_2_2_,
        empleado2_.id_distrito as id_distr4_2_2_,
        empleado2_.dni as dni2_2_2_,
        empleado2_.id_establecimiento as id_estab5_2_2_,
        empleado2_.nombre as nombre3_2_2_,
        distrito3_.id as id1_1_3_,
        distrito3_.nombre as nombre2_1_3_,
        distrito3_.id_provincia as id_provi3_1_3_,
        provincia4_.id as id1_7_4_,
        provincia4_.nombre as nombre2_7_4_,
        provincia4_.id_region as id_regio3_7_4_,
        region5_.id as id1_9_5_,
        region5_.nombre as nombre2_9_5_,
        establecim6_.id as id1_3_6_,
        establecim6_.codigo as codigo2_3_6_,
        establecim6_.id_microred as id_micro4_3_6_,
        establecim6_.nombre as nombre3_3_6_,
        microred7_.id as id1_5_7_,
        microred7_.nombre as nombre2_5_7_,
        microred7_.id_redsalud as id_redsa3_5_7_,
        redsalud8_.id as id1_8_8_,
        redsalud8_.nombre as nombre2_8_8_ 
    from
        persona persona0_ 
    left outer join
        familia familia1_ 
            on persona0_.id_familia=familia1_.id 
    left outer join
        empleado empleado2_ 
            on familia1_.id_titular=empleado2_.id 
    left outer join
        distrito distrito3_ 
            on empleado2_.id_distrito=distrito3_.id 
    left outer join
        provincia provincia4_ 
            on distrito3_.id_provincia=provincia4_.id 
    left outer join
        region region5_ 
            on provincia4_.id_region=region5_.id 
    left outer join
        establecimiento establecim6_ 
            on empleado2_.id_establecimiento=establecim6_.id 
    left outer join
        microred microred7_ 
            on establecim6_.id_microred=microred7_.id 
    left outer join
        red_salud redsalud8_ 
            on microred7_.id_redsalud=redsalud8_.id 
    where
        persona0_.id=?
2022-06-08 08:29:07,500 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        persona0_.id as id1_6_0_,
        persona0_.clasificacion_riesgo as clasific2_6_0_,
        persona0_.dni as dni3_6_0_,
        persona0_.estado_civil as estado_c4_6_0_,
        persona0_.estudios as estudios5_6_0_,
        persona0_.id_familia as id_fami15_6_0_,
        persona0_.fecha_nacimiento as fecha_na6_6_0_,
        persona0_.genero as genero7_6_0_,
        persona0_.idioma as idioma8_6_0_,
        persona0_.nombre_completo as nombre_c9_6_0_,
        persona0_.ocupacion as ocupaci10_6_0_,
        persona0_.parentesco as parente11_6_0_,
        persona0_.pertenencia_etnica as pertene12_6_0_,
        persona0_.religion as religio13_6_0_,
        persona0_.seguro as seguro14_6_0_,
        familia1_.id as id1_4_1_,
        familia1_.asentamiento_humano as asentami2_4_1_,
        familia1_.direccion as direccio3_4_1_,
        familia1_.fecha_creacion as fecha_cr4_4_1_,
        familia1_.lote as lote5_4_1_,
        familia1_.manzana as manzana6_4_1_,
        familia1_.nombre as nombre7_4_1_,
        familia1_.numero_historia as numero_h8_4_1_,
        familia1_.referencia as referenc9_4_1_,
        familia1_.sub_sector as sub_sec10_4_1_,
        familia1_.telefono as telefon11_4_1_,
        familia1_.id_titular as id_titu12_4_1_,
        empleado2_.id as id1_2_2_,
        empleado2_.id_distrito as id_distr4_2_2_,
        empleado2_.dni as dni2_2_2_,
        empleado2_.id_establecimiento as id_estab5_2_2_,
        empleado2_.nombre as nombre3_2_2_,
        distrito3_.id as id1_1_3_,
        distrito3_.nombre as nombre2_1_3_,
        distrito3_.id_provincia as id_provi3_1_3_,
        provincia4_.id as id1_7_4_,
        provincia4_.nombre as nombre2_7_4_,
        provincia4_.id_region as id_regio3_7_4_,
        region5_.id as id1_9_5_,
        region5_.nombre as nombre2_9_5_,
        establecim6_.id as id1_3_6_,
        establecim6_.codigo as codigo2_3_6_,
        establecim6_.id_microred as id_micro4_3_6_,
        establecim6_.nombre as nombre3_3_6_,
        microred7_.id as id1_5_7_,
        microred7_.nombre as nombre2_5_7_,
        microred7_.id_redsalud as id_redsa3_5_7_,
        redsalud8_.id as id1_8_8_,
        redsalud8_.nombre as nombre2_8_8_ 
    from
        persona persona0_ 
    left outer join
        familia familia1_ 
            on persona0_.id_familia=familia1_.id 
    left outer join
        empleado empleado2_ 
            on familia1_.id_titular=empleado2_.id 
    left outer join
        distrito distrito3_ 
            on empleado2_.id_distrito=distrito3_.id 
    left outer join
        provincia provincia4_ 
            on distrito3_.id_provincia=provincia4_.id 
    left outer join
        region region5_ 
            on provincia4_.id_region=region5_.id 
    left outer join
        establecimiento establecim6_ 
            on empleado2_.id_establecimiento=establecim6_.id 
    left outer join
        microred microred7_ 
            on establecim6_.id_microred=microred7_.id 
    left outer join
        red_salud redsalud8_ 
            on microred7_.id_redsalud=redsalud8_.id 
    where
        persona0_.id=?
2022-06-08 08:31:00,569 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    select
        familia0_.id as id1_4_0_,
        familia0_.asentamiento_humano as asentami2_4_0_,
        familia0_.direccion as direccio3_4_0_,
        familia0_.fecha_creacion as fecha_cr4_4_0_,
        familia0_.lote as lote5_4_0_,
        familia0_.manzana as manzana6_4_0_,
        familia0_.nombre as nombre7_4_0_,
        familia0_.numero_historia as numero_h8_4_0_,
        familia0_.referencia as referenc9_4_0_,
        familia0_.sub_sector as sub_sec10_4_0_,
        familia0_.telefono as telefon11_4_0_,
        familia0_.id_titular as id_titu12_4_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_7_3_,
        provincia3_.nombre as nombre2_7_3_,
        provincia3_.id_region as id_regio3_7_3_,
        region4_.id as id1_9_4_,
        region4_.nombre as nombre2_9_4_,
        establecim5_.id as id1_3_5_,
        establecim5_.codigo as codigo2_3_5_,
        establecim5_.id_microred as id_micro4_3_5_,
        establecim5_.nombre as nombre3_3_5_,
        microred6_.id as id1_5_6_,
        microred6_.nombre as nombre2_5_6_,
        microred6_.id_redsalud as id_redsa3_5_6_,
        redsalud7_.id as id1_8_7_,
        redsalud7_.nombre as nombre2_8_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-08 08:57:24,883 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.2.Final
2022-06-08 08:57:24,892 INFO org.springframework.boot.StartupInfoLogger [main] Starting DiresaApplication using Java 16.0.2 on DESKTOP-G0S6I9N with PID 33308 (E:\eclipse\PROYECTOS\DIRESA5\target\classes started by USUARIO in E:\eclipse\PROYECTOS\DIRESA5)
2022-06-08 08:57:24,993 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2022-06-08 08:57:26,473 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-06-08 08:57:26,625 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 137 ms. Found 6 JPA repository interfaces.
2022-06-08 08:57:27,954 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2022-06-08 08:57:27,968 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2022-06-08 08:57:27,969 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2022-06-08 08:57:27,970 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.58]
2022-06-08 08:57:28,162 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2022-06-08 08:57:28,163 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 3026 ms
2022-06-08 08:57:28,353 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2022-06-08 08:57:28,702 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2022-06-08 08:57:28,786 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2022-06-08 08:57:28,900 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.6.5.Final
2022-06-08 08:57:29,323 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-06-08 08:57:29,652 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2022-06-08 08:57:31,087 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-06-08 08:57:31,105 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-06-08 08:57:32,283 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-06-08 08:57:32,556 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will not secure any request
2022-06-08 08:57:33,011 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2022-06-08 08:57:33,050 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path '/api-pedidos'
2022-06-08 08:57:33,064 INFO org.springframework.boot.StartupInfoLogger [main] Started DiresaApplication in 8.857 seconds (JVM running for 9.574)
2022-06-08 08:57:36,438 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-06-08 08:57:36,439 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2022-06-08 08:57:36,444 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 5 ms
2022-06-08 08:57:36,666 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_3_0_,
        establecim0_.codigo as codigo2_3_0_,
        establecim0_.id_microred as id_micro4_3_0_,
        establecim0_.nombre as nombre3_3_0_,
        microred1_.id as id1_5_1_,
        microred1_.nombre as nombre2_5_1_,
        microred1_.id_redsalud as id_redsa3_5_1_,
        redsalud2_.id as id1_8_2_,
        redsalud2_.nombre as nombre2_8_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-08 09:32:23,428 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        empleado0_.id as id1_2_0_,
        empleado0_.id_distrito as id_distr4_2_0_,
        empleado0_.dni as dni2_2_0_,
        empleado0_.id_establecimiento as id_estab5_2_0_,
        empleado0_.nombre as nombre3_2_0_,
        distrito1_.id as id1_1_1_,
        distrito1_.nombre as nombre2_1_1_,
        distrito1_.id_provincia as id_provi3_1_1_,
        provincia2_.id as id1_7_2_,
        provincia2_.nombre as nombre2_7_2_,
        provincia2_.id_region as id_regio3_7_2_,
        region3_.id as id1_9_3_,
        region3_.nombre as nombre2_9_3_,
        establecim4_.id as id1_3_4_,
        establecim4_.codigo as codigo2_3_4_,
        establecim4_.id_microred as id_micro4_3_4_,
        establecim4_.nombre as nombre3_3_4_,
        microred5_.id as id1_5_5_,
        microred5_.nombre as nombre2_5_5_,
        microred5_.id_redsalud as id_redsa3_5_5_,
        redsalud6_.id as id1_8_6_,
        redsalud6_.nombre as nombre2_8_6_ 
    from
        empleado empleado0_ 
    left outer join
        distrito distrito1_ 
            on empleado0_.id_distrito=distrito1_.id 
    left outer join
        provincia provincia2_ 
            on distrito1_.id_provincia=provincia2_.id 
    left outer join
        region region3_ 
            on provincia2_.id_region=region3_.id 
    left outer join
        establecimiento establecim4_ 
            on empleado0_.id_establecimiento=establecim4_.id 
    left outer join
        microred microred5_ 
            on establecim4_.id_microred=microred5_.id 
    left outer join
        red_salud redsalud6_ 
            on microred5_.id_redsalud=redsalud6_.id 
    where
        empleado0_.id=?
2022-06-08 09:38:12,317 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        familia0_.id as id1_4_0_,
        familia0_.asentamiento_humano as asentami2_4_0_,
        familia0_.direccion as direccio3_4_0_,
        familia0_.fecha_creacion as fecha_cr4_4_0_,
        familia0_.lote as lote5_4_0_,
        familia0_.manzana as manzana6_4_0_,
        familia0_.nombre as nombre7_4_0_,
        familia0_.numero_historia as numero_h8_4_0_,
        familia0_.referencia as referenc9_4_0_,
        familia0_.sub_sector as sub_sec10_4_0_,
        familia0_.telefono as telefon11_4_0_,
        familia0_.id_titular as id_titu12_4_0_,
        empleado1_.id as id1_2_1_,
        empleado1_.id_distrito as id_distr4_2_1_,
        empleado1_.dni as dni2_2_1_,
        empleado1_.id_establecimiento as id_estab5_2_1_,
        empleado1_.nombre as nombre3_2_1_,
        distrito2_.id as id1_1_2_,
        distrito2_.nombre as nombre2_1_2_,
        distrito2_.id_provincia as id_provi3_1_2_,
        provincia3_.id as id1_7_3_,
        provincia3_.nombre as nombre2_7_3_,
        provincia3_.id_region as id_regio3_7_3_,
        region4_.id as id1_9_4_,
        region4_.nombre as nombre2_9_4_,
        establecim5_.id as id1_3_5_,
        establecim5_.codigo as codigo2_3_5_,
        establecim5_.id_microred as id_micro4_3_5_,
        establecim5_.nombre as nombre3_3_5_,
        microred6_.id as id1_5_6_,
        microred6_.nombre as nombre2_5_6_,
        microred6_.id_redsalud as id_redsa3_5_6_,
        redsalud7_.id as id1_8_7_,
        redsalud7_.nombre as nombre2_8_7_ 
    from
        familia familia0_ 
    left outer join
        empleado empleado1_ 
            on familia0_.id_titular=empleado1_.id 
    left outer join
        distrito distrito2_ 
            on empleado1_.id_distrito=distrito2_.id 
    left outer join
        provincia provincia3_ 
            on distrito2_.id_provincia=provincia3_.id 
    left outer join
        region region4_ 
            on provincia3_.id_region=region4_.id 
    left outer join
        establecimiento establecim5_ 
            on empleado1_.id_establecimiento=establecim5_.id 
    left outer join
        microred microred6_ 
            on establecim5_.id_microred=microred6_.id 
    left outer join
        red_salud redsalud7_ 
            on microred6_.id_redsalud=redsalud7_.id 
    where
        familia0_.id=?
2022-06-08 09:42:44,690 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-3] Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('}' (code 125)): was expecting double-quote to start field name; nested exception is com.fasterxml.jackson.databind.JsonMappingException: Unexpected character ('}' (code 125)): was expecting double-quote to start field name<EOL> at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 26, column: 22] (through reference chain: com.example.DIRESA.entity.general.Familia["titular"]->com.example.DIRESA.entity.empleado.Empleado["establecimiento"]->com.example.DIRESA.entity.empleado.Establecimiento["microred"]->com.example.DIRESA.entity.empleado.Microred["redsalud"])]
2022-06-08 09:43:34,474 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    insert 
    into
        familia
        (asentamiento_humano, direccion, fecha_creacion, lote, manzana, nombre, numero_historia, referencia, sub_sector, telefono, id_titular) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-08 10:34:29,963 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.2.Final
2022-06-08 10:34:29,965 INFO org.springframework.boot.StartupInfoLogger [main] Starting DiresaApplication using Java 16.0.2 on DESKTOP-G0S6I9N with PID 16104 (E:\eclipse\PROYECTOS\DIRESA5\target\classes started by USUARIO in E:\eclipse\PROYECTOS\DIRESA5)
2022-06-08 10:34:29,969 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2022-06-08 10:34:31,774 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-06-08 10:34:31,959 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 164 ms. Found 6 JPA repository interfaces.
2022-06-08 10:34:34,252 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2022-06-08 10:34:34,286 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2022-06-08 10:34:34,288 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2022-06-08 10:34:34,291 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.58]
2022-06-08 10:34:34,922 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2022-06-08 10:34:34,922 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 4855 ms
2022-06-08 10:34:35,729 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2022-06-08 10:34:36,371 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2022-06-08 10:34:36,712 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2022-06-08 10:34:36,885 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.6.5.Final
2022-06-08 10:34:37,680 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-06-08 10:34:38,300 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2022-06-08 10:34:40,863 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-06-08 10:34:40,881 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-06-08 10:34:42,475 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-06-08 10:34:43,350 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will not secure any request
2022-06-08 10:34:45,292 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2022-06-08 10:34:45,538 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path '/api-pedidos'
2022-06-08 10:34:45,582 INFO org.springframework.boot.StartupInfoLogger [main] Started DiresaApplication in 16.668 seconds (JVM running for 17.559)
2022-06-08 10:41:51,847 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-06-08 10:41:51,849 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-2] Initializing Servlet 'dispatcherServlet'
2022-06-08 10:41:51,851 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-2] Completed initialization in 2 ms
2022-06-08 10:41:52,265 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    insert 
    into
        persona
        (clasificacion_riesgo, dni, estado_civil, estudios, id_familia, fecha_nacimiento, genero, idioma, nombre_completo, ocupacion, parentesco, pertenencia_etnica, religion, seguro) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-06-08 11:09:36,279 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        usuarioent0_.id_usuario as id_usuar1_10_,
        usuarioent0_.clave as clave2_10_,
        usuarioent0_.nombre as nombre3_10_,
        usuarioent0_.usuario as usuario4_10_ 
    from
        usuario usuarioent0_ 
    where
        usuarioent0_.usuario=?
2022-06-08 11:09:36,322 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        authoritie0_.usuario_id as usuario_1_11_0_,
        authoritie0_.authority_id as authorit2_11_0_,
        authoritye1_.authority_id as authorit1_0_1_,
        authoritye1_.nombre as nombre2_0_1_ 
    from
        usuario_authority authoritie0_ 
    inner join
        authority authoritye1_ 
            on authoritie0_.authority_id=authoritye1_.authority_id 
    where
        authoritie0_.usuario_id=?
2022-06-08 11:10:06,059 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-8] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_ 
    where
        empleado0_.dni=?
2022-06-08 11:10:47,866 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_ 
    where
        empleado0_.dni=?
2022-06-08 11:10:47,875 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_7_1_,
        provincia1_.nombre as nombre2_7_1_,
        provincia1_.id_region as id_regio3_7_1_,
        region2_.id as id1_9_2_,
        region2_.nombre as nombre2_9_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-08 11:10:47,906 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-4] 
    select
        establecim0_.id as id1_3_0_,
        establecim0_.codigo as codigo2_3_0_,
        establecim0_.id_microred as id_micro4_3_0_,
        establecim0_.nombre as nombre3_3_0_,
        microred1_.id as id1_5_1_,
        microred1_.nombre as nombre2_5_1_,
        microred1_.id_redsalud as id_redsa3_5_1_,
        redsalud2_.id as id1_8_2_,
        redsalud2_.nombre as nombre2_8_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-08 11:11:19,614 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-2] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_ 
    where
        empleado0_.dni=?
2022-06-08 11:12:03,672 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_ 
    where
        empleado0_.dni=?
2022-06-08 11:12:03,674 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_7_1_,
        provincia1_.nombre as nombre2_7_1_,
        provincia1_.id_region as id_regio3_7_1_,
        region2_.id as id1_9_2_,
        region2_.nombre as nombre2_9_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-08 11:12:03,679 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-5] 
    select
        establecim0_.id as id1_3_0_,
        establecim0_.codigo as codigo2_3_0_,
        establecim0_.id_microred as id_micro4_3_0_,
        establecim0_.nombre as nombre3_3_0_,
        microred1_.id as id1_5_1_,
        microred1_.nombre as nombre2_5_1_,
        microred1_.id_redsalud as id_redsa3_5_1_,
        redsalud2_.id as id1_8_2_,
        redsalud2_.nombre as nombre2_8_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-08 11:12:30,438 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_ 
    where
        empleado0_.dni=?
2022-06-08 11:12:30,442 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_7_1_,
        provincia1_.nombre as nombre2_7_1_,
        provincia1_.id_region as id_regio3_7_1_,
        region2_.id as id1_9_2_,
        region2_.nombre as nombre2_9_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-08 11:12:30,445 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-7] 
    select
        establecim0_.id as id1_3_0_,
        establecim0_.codigo as codigo2_3_0_,
        establecim0_.id_microred as id_micro4_3_0_,
        establecim0_.nombre as nombre3_3_0_,
        microred1_.id as id1_5_1_,
        microred1_.nombre as nombre2_5_1_,
        microred1_.id_redsalud as id_redsa3_5_1_,
        redsalud2_.id as id1_8_2_,
        redsalud2_.nombre as nombre2_8_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-08 11:24:56,352 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_ 
    where
        empleado0_.dni=?
2022-06-08 11:24:56,356 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_7_1_,
        provincia1_.nombre as nombre2_7_1_,
        provincia1_.id_region as id_regio3_7_1_,
        region2_.id as id1_9_2_,
        region2_.nombre as nombre2_9_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-08 11:24:56,360 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-10] 
    select
        establecim0_.id as id1_3_0_,
        establecim0_.codigo as codigo2_3_0_,
        establecim0_.id_microred as id_micro4_3_0_,
        establecim0_.nombre as nombre3_3_0_,
        microred1_.id as id1_5_1_,
        microred1_.nombre as nombre2_5_1_,
        microred1_.id_redsalud as id_redsa3_5_1_,
        redsalud2_.id as id1_8_2_,
        redsalud2_.nombre as nombre2_8_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-08 11:26:38,688 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_ 
    where
        empleado0_.dni=?
2022-06-08 11:26:38,692 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_7_1_,
        provincia1_.nombre as nombre2_7_1_,
        provincia1_.id_region as id_regio3_7_1_,
        region2_.id as id1_9_2_,
        region2_.nombre as nombre2_9_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-08 11:26:38,695 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-1] 
    select
        establecim0_.id as id1_3_0_,
        establecim0_.codigo as codigo2_3_0_,
        establecim0_.id_microred as id_micro4_3_0_,
        establecim0_.nombre as nombre3_3_0_,
        microred1_.id as id1_5_1_,
        microred1_.nombre as nombre2_5_1_,
        microred1_.id_redsalud as id_redsa3_5_1_,
        redsalud2_.id as id1_8_2_,
        redsalud2_.nombre as nombre2_8_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-08 11:26:47,871 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-3] 
    insert 
    into
        empleado
        (id_distrito, dni, id_establecimiento, nombre) 
    values
        (?, ?, ?, ?)
2022-06-08 11:27:59,214 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        empleado0_.id as id1_2_,
        empleado0_.id_distrito as id_distr4_2_,
        empleado0_.dni as dni2_2_,
        empleado0_.id_establecimiento as id_estab5_2_,
        empleado0_.nombre as nombre3_2_ 
    from
        empleado empleado0_ 
    where
        empleado0_.dni=?
2022-06-08 11:27:59,217 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        distrito0_.id as id1_1_0_,
        distrito0_.nombre as nombre2_1_0_,
        distrito0_.id_provincia as id_provi3_1_0_,
        provincia1_.id as id1_7_1_,
        provincia1_.nombre as nombre2_7_1_,
        provincia1_.id_region as id_regio3_7_1_,
        region2_.id as id1_9_2_,
        region2_.nombre as nombre2_9_2_ 
    from
        distrito distrito0_ 
    left outer join
        provincia provincia1_ 
            on distrito0_.id_provincia=provincia1_.id 
    left outer join
        region region2_ 
            on provincia1_.id_region=region2_.id 
    where
        distrito0_.id=?
2022-06-08 11:27:59,220 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [http-nio-8080-exec-6] 
    select
        establecim0_.id as id1_3_0_,
        establecim0_.codigo as codigo2_3_0_,
        establecim0_.id_microred as id_micro4_3_0_,
        establecim0_.nombre as nombre3_3_0_,
        microred1_.id as id1_5_1_,
        microred1_.nombre as nombre2_5_1_,
        microred1_.id_redsalud as id_redsa3_5_1_,
        redsalud2_.id as id1_8_2_,
        redsalud2_.nombre as nombre2_8_2_ 
    from
        establecimiento establecim0_ 
    left outer join
        microred microred1_ 
            on establecim0_.id_microred=microred1_.id 
    left outer join
        red_salud redsalud2_ 
            on microred1_.id_redsalud=redsalud2_.id 
    where
        establecim0_.id=?
2022-06-08 13:04:48,733 WARN com.zaxxer.hikari.pool.HikariPool$HouseKeeper [HikariPool-1 housekeeper] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=24m40s300ms285Âµs200ns).
2022-06-08 13:59:14,649 WARN com.zaxxer.hikari.pool.HikariPool$HouseKeeper [HikariPool-1 housekeeper] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m24s969ms284Âµs300ns).
2022-06-08 18:26:52,030 WARN com.zaxxer.hikari.pool.HikariPool$HouseKeeper [HikariPool-1 housekeeper] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=3h43m13s409ms112Âµs200ns).
